{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"],"fields":{"title":{"boost":1000.0},"text":{"boost":1.0},"tags":{"boost":1000000.0}}},"docs":[{"location":"","title":"Home","text":"<p>Placeholder file for index redirect functionality.</p>"},{"location":"arduino_examples/","title":"Arduino Examples","text":"<p>Arduino</p> <p>This example assumes you are using the latest version of the Arduino IDE on your desktop. If this is your first time using the Arduino IDE, library, or board add-on, please review the following tutorials.</p> <ul> <li>Installing the Arduino IDE</li> <li>Installing Board Definitions in the Arduino IDE</li> <li>Installing an Arduino Library</li> </ul> <p>Note</p> <p>If you've never connected an CH340 device to your computer before, you may need to install drivers for the USB-to-serial converter. Check out our section on \"How to Install CH340 Drivers\" for help with the installation.</p> <ul> <li>How to Install CH340 Drivers</li> </ul> <p>At the time of writing this tutorial, the RTK Everywhere Firmware currently does not support the u-blox LARA-R6 module. For users that are interested in taking advantage of cellular when Ethernet or WiFi is not available, you can check out the individual Arduino Example Sketches located in the SparkFun RTK EVK Example Sketches folder. Besides the 6x examples for the LARA-R6, you will also notice several other examples such as using the ZED-F9P, NEO-D9S, Qwiic OLED, LEDs, antenna open/short circuit detection, Ethernet, WiFi, and datalogging using the microSD card. Head to the SparkFun RTK EVK GitHub Repo to grab the files or download the .ZIP by clicking the button below.</p> GitHub SparkFun RTK EVK Repo: Arduino Example Sketches <p>For the scope of this tutorial, we will upload one of the examples to get started. After downloading the files, unzip the files and head to the following folder: SparkFun_RTK_EVK-main &gt; Example Sketches. Let's test the connection between the ESP32-WROVER and LARA-R6 by clicking on the 8_1_LARA_UART_Test &gt; 8_1_LARA_UART_Test.ino.</p> <p>Note</p> <p>Some examples may include additional header files. You'll need to click on the example that has the same title as the folder's title. Certain examples may also require an additional Arduino Library. Make sure to check the example to see if there is a <code>#include</code> with the Arduino Library name near the top before compiling.  You may also need to update the examples to provide any secret keys, accounts, or passwords.</p> <p>Then select the associated board definition (in this case the ESP32 Wrover Module) and COM port. With a USB C cable connected to the CONFIG ESP32 port, click on the upload button. Opening the Arduino Serial Terminal at 115200 baud, the output will provide the model and SIM card information.</p> <p>Note</p> <p>At the time of writing, we used the following:  <ul> <li> Arduino IDE v2.3.2</li> <li>esp32 by Espressif v3.0.1</li> <li>u-blox Cellular library by SparkFun v1.0.1</li> </ul></p>"},{"location":"hard_copy/","title":"Hard copy","text":"<p>Need to download or print our hookup guide?</p> <ul> <li>Print  (Single-Page View)<ul> <li>To save as a <code>*.pdf</code> file, select the Printer or Destination labeled Save as PDF. (Instructions will vary based on the browser)</li> </ul> </li> </ul>"},{"location":"hardware_hookup/","title":"Hardware Hookup","text":"<p>In this section, we'll go over how to connect to the SparkFun RTK EVK.</p>"},{"location":"hardware_hookup/#cellular-antenna","title":"Cellular Antenna","text":"<p>To take advantage of the LTE cellular network with the LARA-R6, you will need to connect to the two LTE antennas on the back panel. Insert the LTE Hinged External Antenna into the SMA connector labeled as Cell 1 and rotate the threaded connector until it is finger tight. Repeat for the other SMA connector labeled as Cell 2. You will need to adjust the antenna as necessary depending on where you mount the RTK EVK.</p> LTE Cellular Antenna LTE Cellular Antenna Ports Highlighted"},{"location":"hardware_hookup/#multi-band-gnss-antenna","title":"Multi-Band GNSS Antenna","text":"<p>Of course, you will need to connect an active multi-band GNSS antenna to the RTK EVK. We recommend using the L1/L2/L5 Surveying Antenna (SPK6618H) that is included with the kit. This covers the L1 and L2 band for the ZED-F9P. This also includes a built-in ground plane to provide the best performance for GNSS. This antenna will also provide broad coverage of the L-Band for the correction signals. Insert the SMA connector from the interface cable to the SMA connector labeled as GNSS. Tighten the hex nut until it is finger tight. Connect the TNC connector side from the interface cable to the to the SPK6618H antenna. Tighten the threaded connector until it is finger tight.</p> GNSS Antenna Port Highlighted Cable Survey Antenna <p>You will need to mount the antenna in an area where it gest the best view of the sky (we recommend the roof). There is mounting hardware where you can permanently mount the antenna to a structure or support. There is also a magnetic mount to attach to a metal structure as well. For the scope of this tutorial, we will not go over the details of installing the antenna.</p> Cable Connected and Survey Antenna Mounted on Magnetic Stand"},{"location":"hardware_hookup/#wifibluetooth-antenna","title":"WiFi/Bluetooth Antenna","text":"<p>For WiFi and Bluetooth using the ESP32, you will need to connect the 2.4GHz Duck Antenna to the RPSMA connector labeled as ESP32. Insert the antenna into the RPSMA connector and tighten the threaded connector until it is finger tight.</p> WiFi/Bluetooth Connector Highlighted WiFi/Bluetooth Antenna <p>Note</p> <p>For users that need an extension cable to mount the antenna to a location that is farther away from the RTK EVK, you could use the Interface Cable - RP-SMA Male to RP-SMA Female (10M, RG58).</p>"},{"location":"hardware_hookup/#ethernet","title":"Ethernet","text":"<p>For users that are connecting Ethernet or using power from the PoE, you will need to connect the Ethernet cable between the RTK EVK and your PoE network switch. Insert the Ethernet cable to the RJ45 MagJack connector until you hear a click. Then insert the other end into the network switch.</p> Ethernet Port Highlighted Ethernet Cable"},{"location":"hardware_hookup/#connecting-to-the-esp32","title":"Connecting to the ESP32","text":"<p>You can connect to the ESP32 by inserting the USB-C connector into the port labeled as CONFIG ESP32 and inserting the other end of the cable to your computer's USB port. This will power the RTK EVK, allow you to upload custom code, manually update the firmware binaries, or connect to a serial terminal.</p> USB CONFIG ESP32 Port Highlighted USB C Cable"},{"location":"hardware_hookup/#connecting-to-the-u-blox-modules","title":"Connecting to the u-blox Modules","text":"<p>You can connect to the ZED-F9P, NEO-D9S, or LARA-R6 by inserting the USB-C connector into the port labeled as CONFIG UBLOX and inserting the other end to your computer's USB port.  This will power the RTK EVK and allow you to connect the modules to u-center or m-center (for the LARA-R6).</p> USB CONFIG ESP32 Port Highlighted USB C Cable"},{"location":"hardware_hookup/#inserting-a-microsd-card","title":"Inserting a MicroSD Card","text":"<p>To insert a microSD card, slide the microSD card into the microSD socket until it clicks in place. Pushing the microSD card again will eject the memory card.</p> MicroSD Card Port Highlighted MicroSD Card"},{"location":"hardware_hookup/#inserting-a-nano-sim-card","title":"Inserting a Nano SIM Card","text":"<p>Note</p> <p>To take advantage of the LARA-R6, insert the nano SIM card into the nano SIM socket until it clicks. In this case, we used a Hologram card. Insert the SIM with the contacts facing down, insert the edge with the chamfered corner first.</p> Nano SIM Card Socket Highlighted Nano SIM Card <p>Note</p> <p>You will need to remove the nano SIM card from the 3-in-1 SIM card holder when you initially receive the Hologram card. Just \"punch\" out the pre-cut nano SIM card size out by pushing it out with your fingers. Make sure to avoid touching the gold contacts with your bare hands.</p>"},{"location":"hardware_hookup/#activate-your-hologram-sim","title":"Activate Your Hologram SIM","text":"<p>If you're using a SIM card from Hologram, you'll need to follow a few quick steps to activate your SIM card. <ol> <li>Log in to your Hologram account, or create one.</li> <li>Click the blue + Activate SIM button in the upper-right-corner of your Dashboard.</li> <p> </p> <li>Select your plan \u2013 in most cases \u201cMaker Flexible\u201d is the way to go, but you can upgrade.</li> <li>Enter your SIM card\u2019s CCID. This number can be found printed on both your nano-SIM card and in the larger digits below the bar code. Then select continue.</li> <li>Next you can decide whether to enable auto-refill or not and continue. Finally, you\u2019ll be greeted with a summary page \u2013 hit \u201cActivate\u201d and you\u2019re ready to go!</li> </ol> <p>For more help activating your Hologram SIM card, check out their Connect Your Device documentation.</p></p>"},{"location":"hardware_hookup/#inserting-a-wire-into-the-io-screw-terminal","title":"Inserting a Wire into the I/O Screw Terminal","text":"<p>To connect to a pin on the screw terminal block, insert a stripped wire of any length into the I/O screw terminal. Of course, you could use jumper wires with pins as well. Secure the wire by tightening the screw using a precision 2.5mm flathead screw driver. Test the connection by gently pulling the wires to ensure that they are secure.</p> Wire Inserted into I/O and Screw Being Tightened <p>If necessary, users can remove the terminal block off by wiggling the connector or using a spudger. When ready, users can slide the I/O terminal block back into the socket.</p> I/O Screw Terminal Block Removed <p>Tip</p> <p>Don't have spudger? A good substitute includes a flathead screw driver, plastic card, or the PCB ruler. Using a tool will make it easier to remove the I/O terminal block.</p>"},{"location":"hardware_hookup/#connecting-a-radio-transceiver","title":"Connecting a Radio Transceiver","text":"<p>Users can connect a radio transceiver to the ZED-F9P UART2 port for correction data. We recommend using a breadboard to JST-GHR-06V cable to connect the SiK Telemetry Radio. Note that the cable is included with the LoRaSerial Kit.</p> <ul> <li> <p> </p> <p> SiK Telemetry Radio V3 - 915MHz, 100mW    WRL-19032 </p> </li> </ul> <ul> <li> <p> </p> <p> SparkFun LoRaSerial Kit - 915MHz (Enclosed)    KIT-20029 </p> </li> </ul> <ul> <li> <p> </p> <p> Breadboard to JST-GHR-06V Cable - 6-Pin x 1.25mm Pitch (For LoRaSerial)    CAB-23353 </p> </li> </ul> <p>For users with the using a telemetry radio, you will need to connect the UART pins and ground to the screw terminal block. Note that this connection is only for the serial UART connection. To power, we recommend using an external 5V voltage source since 5V is not broken out. While there is a 3V3 pin available, the voltage will not be enough to fully power the radio module. One method is connecting a micro-B USB cable and 5V USB wall adapter to the Telemetry Radio.</p> RTK EVKUART Pinout              TelemetryUART Pinout              ZED TX2 RX ZED RX2 TX GND GND <p>For users with the LoRaSerial, you will also be connecting the UART pins and ground to the screw terminal block. To power, we also recommend using an external 5V voltage source for power such as a USB C cable and 5V USB wall adapter.</p> RTK EVKUART Pinout              LoRaSerialUART Pinout              ZED TX2 RXI ZED RX2 TXO GND GND"},{"location":"hardware_hookup/#connecting-via-pth","title":"Connecting via PTH","text":"<p>There are various PTHs throughout the PCB. Most are used with the testbeds for quality control but they are available for you to connect! For temporary connections to the PTHs, you could use IC hooks to test out the pins. However, you'll need to solder headers or wires of your choice to the board for a secure connection. You can choose between header pins and jumper wires, or stripping wire and soldering the wire directly to the board.</p> <ul> <li> <p> </p> <p> How to Solder: Through Hole Soldering </p> </li> </ul> <ul> <li> <p> </p> <p> Working with Wire </p> </li> </ul>"},{"location":"hardware_overview/","title":"Hardware Overview","text":"<p>The electronics of the SparkFun RTK EVK is enclosed in a custom extruded aluminum case with machined end panels and slotted flanges.</p> Front View Back View <p>The image below shows a top and bottom view of the populated PCB without the enclosure.</p> PCB Top View PCB Bottom View"},{"location":"hardware_overview/#power","title":"Power","text":"<p>The SparkFun RTK EVK can be powered from the connectors on the front or the back of the board. There is no internal battery. Schottky protection diodes and a resettable fuse are included to prevent conflicting voltages and overvoltage protection. Voltage is then regulated down to 3.3V through the three voltage regulators.</p> <ul> <li>CONFIG ESP32 \u2014 The CONFIG ESP32 includes a USB C connector to power the RTK EVK. Users can also upload code or connect to the ESP32 to a serial terminal.</li> <li>CONFIG UBLOX \u2014 The CONFIG UBLOX includes a USB C connector to power the RTK EVK as well. A USB hub is connected to this port and connects to the ZED-F9P, NEO-D9S, and LARA-R6 for users that are interested in connecting them to u-center, m-center or updating the firmware.</li> </ul> USB Connectors Highlighted in Front USB Connectors Highlighted PCB Top View <p>Power can also be provided from the I/O screw terminals or PoE.</p> <ul> <li>VIN+ \u2014 This terminal can be used to feed in external DC power between +9V and +36V. This is for users that want to power the unit from a vehicle battery or any other source in that voltage range. Connect VIN+ to the battery +ve. The voltage is first regulated to 5V by a fully-isolated DC-DC converter before being regulated again to 3.3V.</li> <li>VIN- \u2014 For external DC power, connect this terminal to the chassis, battery -ve or 0V. Note that there is no direct connection between VIN- and GND as the internal DC-DC converter is fully isolated. It is possible to link VIN- to the adjacent GND terminal, but doing so will bypass the voltage isolation and could introduce a ground loop.</li> <li>GND \u2014 The internal ground or 0V for the system.</li> <li>Ethernet (PoE) \u2014 The input voltage through the RJ45 connector can be between +36V and +57V. The voltage is first regulated down to 5V by the isolated PoE module before being regulated agin to 3.3V.</li> </ul> USB Connector, Ethernet POE, and Power Input on Screw Terminals Highlighted in Back Ethernet POE, and Power Input on Screw Terminals Highlighted on PCB <p>There is also an output power pin for 3.3V on the I/O screw terminal.</p> <ul> <li>3V3 \u2014 This pin is the output of one of the 3.3V voltage regulators. Note that this is only connected to the secondary power. This net is also connected to the microSD card socket, ZED-F9P, NEO-D9S, USB Hub, MagJack RJ45 connector's LEDs, and WIZnet W5500.</li> </ul> 3.3V Input on Screw Terminals Highlighted in Back 3.3V Input on Screw Terminals Highlighted on PCB"},{"location":"hardware_overview/#ch340-usb-to-serial-converter","title":"CH340 USB-to-Serial Converter How to Install CH340 Drivers","text":"<p>A CH340 USB-to-Serial converter is included between the USB-C connector and the ESP32. The chip can be used to send serial data between the RTK EVK and computer. You can view the output or configure the device through a serial terminal. You can also manually upload new firmware as well.</p> CH340 USB-to-Serial Converter Highlighted <p>The driver should automatically install on most operating systems. However, there is a wide range of operating systems out there. You may need to install drivers the first time you connect the chip to your computer's USB port or when there are operating system updates. For more information, check out our How to Install CH340 Drivers Tutorial.</p>"},{"location":"hardware_overview/#esp32-wrover-module","title":"ESP32-WROVER Module","text":"<p>The RTK Everywhere firmware is pre-loaded with the RTK EVK and flashed to the ESPRESSIF ESP32-WROVER module (with 16MB flash and 8MB PSRAM). The ESP32 handles all the processes. You can configure the EVK as a RTK base and push corrections to an NTRIP Caster. You can also configure the EVK as a RTK Rover and use corrections delivered over WiFi or Bluetooth. You can even update firmware over-the-air. For more information, we recommend checking out the RTK Everywhere Product Manual.</p> ESP32 Highlighted <p>Note</p> <p>The ESP32-WROVER module can only connect to a 2.4GHz WiFi network. Unfortunately, 5GHz is not supported on the ESP32-WROVER module.</p> <p>For users that want to configure the ESP32 using a serial terminal, you will simply need to connect the CONFIG ESP32 to your computer's USB port. Once connected, open a serial terminal set to 115200 baud and press any key to open the serial configuration menu. Of course, this is only one method of adjusting the settings. You can also change the settings through WiFi, Bluetooth, and a text file saved on a microSD card.</p>"},{"location":"hardware_overview/#esp32-primary-i2c-port","title":"ESP32 Primary I<sup>2</sup>C Port","text":"<p>The screw terminal on the back includes an I<sup>2</sup>C port. This is connected to the ESP32's primary I<sup>2</sup>C port and is shared by the ZED-F9P and NEO-D9S.</p> <ul> <li>SCL \u2014 The ESP32 I<sup>2</sup>C bus clock on pin 22. The logic level is 3.3V. Currently, there are no pull-up resistors attached to this line. To configure, you will need to add a solder blob to the I<sup>2</sup>C jumper.</li> <li>SDA \u2014ESP32 I<sup>2</sup>C bus data on pin 21. The logic level is 3.3V. Currently, there are no pull-up resistors attached to this line. To attach the 2.2k\u03a9 pull-up resistors to the port, you will just need to add a solder blob to the I<sup>2</sup>C jumper.</li> </ul> <p>Note</p> <p>3.3V and GND are also conveniently placed next to the SCL and SDA pins. These follow the same pinout as most of the SparkFun I<sup>2</sup>C breakout boards with PTHs.</p> I<sup>2</sup>C Port Highlighted I<sup>2</sup>C Port Highlighted on PCB <p>The I<sup>2</sup>C peripherals connected to the primary I<sup>2</sup>C port and their address are listed below:</p> <ul> <li>ZED-F9P \u2014 0x42 (default)</li> <li>NEO-D9S \u2014 0x43 (default)</li> </ul>"},{"location":"hardware_overview/#esp32-secondary-i2c-port","title":"ESP32 Secondary I<sup>2</sup>C Port","text":"<p>Inside of the enclosure, there is a Qwiic vertical port available. This is connected to the Qwiic OLED via a Qwiic cable. This port is connected to the ESP32's secondary I<sup>2</sup>C port with SCL connected to pin 15 and SDA connected to pin 12. The logic level is also 3.3V. Currently, there are no pull-up resistors attached to this line. To attach the 2.2k\u03a9 pull-up resistors to the port, you will just need to add a solder blob to the I<sup>2</sup>C jumper.</p> I2C Port Highlighted <p>The I<sup>2</sup>C peripheral connected to the secondary I<sup>2</sup>C port and their address is listed below:</p> <ul> <li>Qwiic OLED - (1.3in., 128x64) \u2014 0x3D (default)</li> </ul>"},{"location":"hardware_overview/#qwiic-oled-display","title":"Qwiic OLED Display","text":"<p>The RTK EVK includes the SparkFun Qwiic OLED - (1.3in., 128x64). This is connected to the ESP32 via a Qwiic port contained within the enclosure. As stated earlier, the default address for the display is 0x3D. The display provides useful information about the RTK EVK without needing to connect to a serial terminal.</p> OLED Display Highlighted <p>Below show some of the possible outputs from the RTK EVK. The icons are explained further in the RTK Everywhere Product Manual &gt; Hardware &gt; Displays.</p> <p>The image below shows the Bluetooth MAC address of the RTK EVK on the upper left hand corner of the screen. If there is a Bluetooth connection, the Blueooth symbol will display. To the right is the WiFi symbol. To the right of the WiFi symbol is the icon indicating the selected dynamic model, in this case it's the default portable icon. On the upper far right, is the Ethernet connection symbol. Below the Bluetooth MAC address is the RTK float solution symbol. The number to the right indicates the horizontal position accuracy. In this case, there is an RTK float since the value is between 0.400 meters to 0.200 meters. To the right is the satellites in view symbol and number of satellites. The additional antenna lines indicates that the RTK EVK that there is successful reception and decryptions of L-band corrections. Finally, the rotating semi-circle indicates the RTK EVK firmware is running. This changes to a logging icon when data is being logged to microSD card.</p> OLED Display Output <p>The image below is similar to the previous display output. You'll notice a few differences. The arrow pointing down indicates that there are corrections being received. The Ethernet symbol is also not displaying since there was no Ethernet connection at that moment. The horizontal positional accuracy indicates that there is a RTK fixed solution with the double cross hairs since the value is below 0.200 meters. Finally, the display is showing 29 satellites in view and no L-band corrections.</p> OLED Display with RTK Fixed Solution"},{"location":"hardware_overview/#zed-f9p-module","title":"ZED-F9P Module","text":"<p>The RTK EVK wouldn't be a an RTK without well... a high precision RTK. The RTK EVK includes a built-in u-blox ZED-F9P module for high precision GNSS. You will need to connect an active multiband antenna that is capable of receiving L1 and L2 signals. The ZED-F9P can be set as a base station or rover. There are several options to send or receive correction data depending on the mode: Ethernet, WiFi network, LTE cellular network, or the NEO-D9S. Note that the RTK Everywhere firmware does not currently support cellular, but there are separate code examples showing how to receive localized corrections from PointPerfect via cellular. As stated earlier, the ZED-F9P is connected to the primary I<sup>2</sup>C port and uses the default address of 0x42.</p> ZED-F9P Highlighted <p>Below are a few specifications taken from the ZED-F9P's datasheet:</p> <ul> <li>Concurrent reception of GPS, GLONASS, Galileo, and BeiDou</li> <li>Receives both L1C/A and L2C bands</li> <li>184-channel u-blox F9 engine</li> <li>Time to First Fix: 25s (cold), 2s (hot)</li> <li>Max Navigation Rate: 20Hz / 25Hz depending on mode</li> <li>Horizontal Position Accuracy: 2.5m without RTK; 0.010m with RTK</li> <li>Max Altitude: 50km (31 miles)</li> <li>Max Velocity: 500m/s (1118mph)</li> </ul>"},{"location":"hardware_overview/#zed-f9p-secondary-uart-port","title":"ZED-F9P Secondary UART Port","text":"<p>The screw terminal on the back includes a UART port. This is connected to the ZED-F9P's secondary UART port (UART2) for users that want to connect to other high precision GNSS modules for correction data.</p> <ul> <li>TX2 \u2014 The ZED-F9P's UART2 transmit pin. The logic level is 3.3V. Users can connect this pin to a radio module or directly to a high precision GNSS module's RX pin to provide correction data to other rovers.</li> <li>RX2 \u2014 The ZED-F9P's UART2 receive pin. The logic level is 3.3V. Users can connect this pin to a radio module or directly to a high precision GNSS module's TX pin to receive correction data provided by another base station.</li> </ul> ZED-F9P UART Correction Port Highlighted ZED-F9P UART Correction Port Highlighted on PCB"},{"location":"hardware_overview/#zed-f9p-external-interrupt","title":"ZED-F9P External Interrupt","text":"<p>The screw terminal on the back includes an external interrupt for the ZED-F9P. The interrupt can either be an input/output pin. This can be configured using u-center to bring the module out of deep sleep or to output an interrupt for various module states. In the RTK Everywhere firmware, this terminal can be used to trigger and log a UBX-TIM-TM2 timing message. The logic level is 3.3V.</p> ZED-F9P External Interrupt Highlighted ZED-F9P External Interrupt Highlighted on PCB"},{"location":"hardware_overview/#zed-f9p-time-pulse","title":"ZED-F9P Time Pulse","text":"<p>The screw terminal on the back labeled as TP includes ZED-F9Ps time pulse output (i.e. the pulse-per-second or PPS output). This pulses at 1Hz when the module gets basic GPS/GNSS position lock and can be configured using the u-center. The logic level is 3.3V.</p> ZED-F9P Time Pulse Highlighted ZED-F9P Time Pulse Highlighted on PCB"},{"location":"hardware_overview/#neo-d9s","title":"NEO-D9S","text":"<p>The RTK EVK includes the built-in u-blox NEO-D9S for correction data. You will need to connect an antenna that is capable of receiving signals from the L-band to access u-blox PointPerfect correction service. The NEO-D9S is connected to the primary I<sup>2</sup>C port and uses the default address of 0x43. You will need a service provider to access the correction data.</p> NEO-D9S Highlighted <p>Below are a few specifications taken from the NEO-D9S's datasheet:</p> <ul> <li>L-Band data receiver compliance: SESTB28A</li> <li>Frequency range: 1525 to 1559MHz</li> <li>Sensitivity: 133dBm</li> <li>Time to First Frame: &lt;10s</li> <li>Receives PMP messages from Inmarsat Geosynchronous Satellites</li> </ul>"},{"location":"hardware_overview/#microsd-card-socket","title":"MicroSD Card Socket","text":"<p>The front of the RTK EVK includes a microSD card socket. Insert a microSD card into the socket until it clicks in place. Pushing the microSD card again will eject the memory card. This is connected to the ESP32's SPI port. Power is provided by the secondary power source. Users can manually flash the firmware binaries using the microSD card as opposed to over-the-air updates. Typically, the microSD card is for datalogging. The microSD card can also hold the user preferences for anyone that is interested in deploying multiple RTK EVKs with the same settings out in the field.</p> MicroSD Card Slot Highlighted MicroSD Card Slot Highlighted on PCB"},{"location":"hardware_overview/#lara-r6-cellular-module","title":"LARA-R6 Cellular Module","text":"<p>The RTK EVK also includes the u-blox LARA-R6 cellular module for users that need to connect to a LTE cellular network. The module is connected to the ESP32 via UART.</p> LARA-R6 Highlighted <p>Below are a few specifications taken from the LARA-R6's datasheet:</p> <ul> <li>Region: Global</li> <li>LTE FDD Bands: 1, 2, 3, 4, 5, 7, 8, 12, 13, 18, 19, 20, 26, &amp; 28</li> <li>Certifications and approvals:</li> <li>PTCRB, GCF, FCC, ISED, RED, UKCA, NCC, RCM, Giteki, Anatel, KC, AT&amp;T,</li> <li>Verizon, T-Mobile, Deutsche Telekom, Telefonica, NTT DoCoMo, SBM, KDDI, Telstra</li> </ul> <p>Note</p> <p>Although the LARA supports GSM/GPRS, the RTK EVK does not due to the high current required.</p> <p>Note</p> <p>Currently, the RTK Everywhere firmware does not support cellular with the LARA-R6. However, we have written and tested extra code examples which will allow you to stream MQTT correction data from a u-blox PointPerfect Localized Distribution topic via the LARA-R6 cellular chip. This example demonstrates how easy it is to subscribe to PointPerfect and only receive the IP correction data you need for your location, minimizing your cellular data costs.</p>"},{"location":"hardware_overview/#nano-sim-card-socket","title":"Nano SIM Card Socket","text":"<p>To connect to an cellular network with the built-in u-blox LARA-R6 (specifically the LARA-R6001D), you will need a nano SIM card. The cellular module works with most major North American carriers (Verizon, T-Mobile, AT&amp;T, etc.). Make sure to check with your network service provider for compatibility. You also may need approval with the service carrier before the service is activated. We recommend using the Hologram SIM Card. Insert the SIM with the contacts facing down, insert the edge with the chamfered corner first.</p> Nano SIM Card Socket Highlighted Nano SIM Card Socket Highlighted on PCB"},{"location":"hardware_overview/#wiznet-w5500-ic-ethernet-jack-and-poe","title":"WIZnet W5500 IC, Ethernet Jack, and PoE","text":"<p>The RTK EVK includes a built-in Ethernet circuitry. You can connect an Ethernet cable to the back of the RTK EVK's RJ45 MagJack port. This connector includes status LEDs for Link and Activity. These LEDs can be disabled by cutting the jumpers on the back of the PCB. The port connects to the Power-over-Ethernet (PoE) module and WIZnet W5500 Ethernet transceiver. 10/100Mbps is supported with auto-negotiation. As stated earlier, the PoE module can be powered using the standard PoE voltages between +36V to +57V. Make sure to choose a PoE Ethernet Switch that meeds your needs. We have had good experience with the TP Link TL-SG1005P - available from many retailers including Amazon.</p> Ethernet Jack HighlightedWIZnet W5500 IC, Ethernet Jack, and PoE Module Highlighted"},{"location":"hardware_overview/#antenna-connections","title":"Antenna Connections","text":"<p>The back of the SparkFun RTK EVK includes a few connectors for cellular, GNSS, and WiFi antennas.</p> <ul> <li>Cell 1 \u2014 The SMA Connector labeled as Cell 1 is for the u-blox LARA-R6006. This connection represents the main RF input/output for LTE/3G/2G RF signals transmission and reception. This is intended to connect the LTE Hinged External Antenna - 698MHz-2.7GHz.</li> <li>Cell 2 \u2014 The SMA Connector labled as Cell 1 is for the u-blox LARA-R606. This connection represents the secondary RF input for LTE/3G Rx diversity and LTE MIMO 2x2 down-link RF signals reception. This is intended to connect the second LTE Hinged External Antenna - 698MHz-2.7GHz.</li> <li> <p>GNSS \u2014 The SMA connector labeled as GNSS is for the u-blox ZED-F9P and NEO-D9S. This is connected to a GNSS splitter (Power Divider) and allows you to connect a single GNSS antenna for both modules. This is intended to connect an active multiband GNSS antenna using the SMA male to TNC male interface cable that is included in the kit. The RTK EVK provides 5V on this connector for an active multiband antenna instead of the usual 3.3V. Short-circuit and open-circuit detection is built into this connection as well. The following icons will flash whenever the RTK EVK does not detect an antenna (i.e. an open circuit) or if there is a short in the cable. Next to the icons will also indicate that there will be 0 satellites in view.</p> <p> Antenna Open Circuit Highlighted Antenna Short Circuit Highlighted </p> </li> <li> <p>ESP32 \u2014 The RP-SMA connector labeled as ESP32 is for the ESP32-WROVER. This is intended to connect the 2.4GHz WiFi/BT antenna.</p> </li> </ul> Antenna Connectors Highlighted on Back Antenna Connectors Highlighted on PCB"},{"location":"hardware_overview/#buttons","title":"Buttons","text":"<p>There are two buttons located on the front of the SparkFun RTK EVK.</p> <ul> <li>RESET \u2014 The reset button is available for users that need to manually reset the ESP32. The reset button sits flush against the front panel to prevent users from accidentally resetting the RTK EVK. You will need to press the button firmly or use a pen.</li> <li>MODE The mode button is available for users that want to change the mode. This button is connected to pin 0 on the ESP32 and can also be used as a boot button to set the ESP32 into bootloader mode when manually uploading code with the reset button.</li> </ul> Reset and Mode/Boot Buttons Highlighted Reset and Mode/Boot Buttons Highlighted on PCB <ul> <li> <p>RTK Modes \u2014 The available modes for the RTK Everywhere firmware are listed below. A single press brings up the mode menu. Press the button again to step through the available modes listed below. Pause on the highlighted mode then double-click to select it and change to that mode. For more information on the modes, make sure to check out the RTK Everywhere Manual.</p> <ul> <li>BASE<ul> <li>This is the default mode as it is the mode we think most users will want to use - but you always surprise us with the novel ways you use our products!</li> <li>The RTK EVK will perform a short 1-2 minute \"survey-in\" to establish the approximate position of the antenna (~1m accuracy).</li> <li>It will then start generating RTCM correction data and - once configured - can send it to an NTRIP Caster over Ethernet or WiFi.</li> <li>The RTCM data will also be output as 3.3V Serial (UART) data on the ZED-F9P TX2 I/O screw connection on the rear panel. You can connect a radio transceiver to that pin if desired.</li> <li>You can establish the antenna position more accurately by collecting 'raw' satellite data for ~24 hours and post-processing it. You can find full instructions in the RTK Everywhere Product Manual.</li> </ul> </li> <li>ROVER<ul> <li>The RTK EVK can of course also be used as a RTK Rover.</li> <li>In Rover mode, the antenna position and other data is logged to microSD card.</li> <li>Once configured, RTCM correction data can be received over Ethernet, WiFi or Bluetooth from a NTRIP Caster and used to achieve an accuracy of ~1.4cm under good conditions.</li> <li>Use Rover mode to collect the 'raw' satellite data to establish your antenna's position accurately for Base mode.</li> </ul> </li> <li>NTP<ul> <li>The RTK EVK can also act as a Network Time Protocol Server - servicing NTP requests over Ethernet.</li> <li>The firmware defaults to using DHCP to obtain an IP Address. But you can also configure it to use a fixed IP Address and can define the DNS, Gateway and Subnet Mask too.</li> <li>You can find full instructions in the RTK Everywhere Product Manual.</li> </ul> </li> <li>Cfg Eth (Configure-Via-Ethernet)<ul> <li>Abbreviated as \"Cfg Eth\", Configure-Via-Ethernet mode is a dedicated mode where the RTK EVK Station can be configured via a web page over Ethernet.</li> <li>This mode works best with exclusive access to the WIZnet W5500 chip and the SPI bus and so the RTK EVK actually reboots when this mode is selected.</li> <li>When leaving this mode - either by exiting the web page or by pressing the Mode button - the RTK EVK will reboot again into Base, Rover or NTP mode. The new mode is selected by the small drop-down box on the System tab.</li> <li>You can find full instructions in the RTK Everywhere Product Manual.</li> </ul> </li> <li>Cfg WiFi<ul> <li>Abbreviated as \"CfgWiFi\", Configure-Via-WiFi mode is another dedicated mode where the RTK EVK can be configured via a web page over WiFi.</li> <li>By default, the RTK EVK will appear as a WiFi Hot Spot / Access Point - but it can be configured to connect to your preferred WiFi network too.</li> <li>The RTK EVK will reboot when leaving this mode - to apply any changes made.</li> <li>You can find full instructions in the RTK Everywhere Product Manual** (Configure-Via-WiFi)</li> </ul> </li> <li>Get Keys<ul> <li>When there is an Ethernet or WiFi connection, the RTK EVK can access the PointPerfect system and automatically obtain keys to allow the decryption of corrections.</li> <li>More details are provided in the RTK Everywhere Product Manual</li> </ul> </li> <li>E-Pair (ESP NOW Pairing)<ul> <li>Abbreviated as \"E-Pair\", ESP NOW is a way of linking two ESP32 processors via WiFi so that they can communicate with each other, line of sight up to approximately 250m.</li> <li>The ESP NOW link allows a base to share correction data with a single rover.</li> <li>More details are provided in the RTK Everywhere Product Manual</li> </ul> </li> </ul> <p> OLED Display Cycling Through Modes </p> </li> <li> <p>Bootloader Mode \u2014 The boot button usually allows users to force the ESP32 into bootloader mode to manually upload new code to the ESP32.</p> </li> </ul>"},{"location":"hardware_overview/#leds","title":"LEDs","text":"<p>There are three LEDs available:</p> <ul> <li>STATUS \u2014 The built-in STATUS LED is used to indicate when the BASE mode has completed its survey-in.</li> <li>LINK \u2014 The built-in LINK LED on the RJ45 MagJack connector is connected to the WIZnet 5500's LINKLED pin and is used to indicate when there is a Ethernet Link.</li> <li>ACT \u2014 The built-in ACT LED on the RJ45 MagJack connector is connected to the WIZnet 5500's ACTLED pin and used to indicate when there is Ethernet activity.</li> </ul> LED Highlighted LEDs on Ethernet Connector Highlighted"},{"location":"hardware_overview/#jumpers","title":"Jumpers","text":"<p>Note</p> <p>If this is your first time working with jumpers, check out the How to Work with Jumper Pads and PCB Traces tutorial for more information.</p> <p>The RTK EVK includes various jumpers on the back of the PCB.</p> <ul> <li>SHLD \u2014 There are two jumpers labeled as SHLD on the back of the PCB. These jumpers connect the USB Type C connector's shield pin to GND. By default, these are closed. Cut this to isolate the USB Type C connector's shield pin for the ESP32 and the ZED-F9P.</li> <li>MEAS \u2014 To enable measurements and determine how much power the RTK EVK uses, we've added a NC (normally closed) jumper between the two MEAS PTH pins. By cutting this jumper, the voltage connecting to the 3.3V voltage regulator input is interrupted. Soldering in a male jumper or wires into the accompanying holes will give you the ability to insert a current meter and precisely monitor how much current your application is consuming.</li> <li>VIN+ \u2014 The VIN+ jumper connects the I/O Screw Terminal to the 5V DC-DC converter's VIN+ pin. This is closed by default. Cut this trace to disable the connection.</li> <li>VIN- \u2014 The VIN- jumper connects the I/O Screw Terminal to the 5V DC-DC converter's VIN- pin. This is closed by default. Cut this trace to disable the connection.</li> <li>PW+ \u2014 The PW+ jumper connects the RJ45 MagJack's PW+ pin to the DP9905 PoE's VIN+ pin. This is closed by default. Cut this trace to disable the connection.</li> <li>PW- \u2014 The PW- jumper connects the RJ45 MagJack's PW- pin to the DP9905 PoE's VIN- pin. This is closed by default. Cut this trace to disable the connection.</li> <li>GNSS Reset \u2014 The GNSS reset jumper is open by default. Adding a solder blob will connect the reset button (which is currently only connected to the ESP32's reset pin) to the reset pins on both the ZED-F9P and NEO-D9S. Pulling the pin low by pressing the button will initiate a reset on the ZED-F9P and NEO-D9S. This will delete all information and trigger a cold start. As stated in the integration manual, this should only be used as a recovery option. Compared to the other jumpers, this jumper includes a 1x2 PTH. Users can also break off a 1x2 standard male header and temporarily connect a 1x2 jumper.</li> <li>I<sup>2</sup>C \u2014 This three way jumper labeled <code>I<sup>2</sup>C</code> will connect to two pull-up resistors to the I<sup>2</sup>C data and clock lines when closed. For advanced users that do not have pull-up resistors attached to the I<sup>2</sup>C lines on their microcontroller, make sure to close the jumpers with a little solder blob.</li> <li>POE LOAD \u2014 The POE LOAD creates a dummy load of 100mA on the DC/DC converter output. This is closed by default. Cut this trace to disable the dummy load.</li> <li>WIZnet W5500 Mode Jumper \u2014 For users that want to configure the WIZnet W5500 mode, there are three jumpers available to adjust the network mode. By default, the jumpers are set to 111 or \"All capable, Auto-negotiation.\" For more information on the different modes, check out the WIZnet 5500 datasheet linked in the Resources.<ul> <li>PMODE0 \u2014 Pulled high. Add as solder jumper to pull the pin low.</li> <li>PMODE1 \u2014 Pulled high. Add as solder jumper to pull the pin low.</li> <li>PMODE2 \u2014 Pulled high. Add as solder jumper to pull the pin low.</li> </ul> </li> <li>LED \u2014 The LED jumper connects the status LED to the ESP32's pin 2. This is closed by default. Cut this trace to disable the status LED.</li> <li>LINK \u2014 The LINK jumper connects the RJ45 Link LED to the WIZnet 5500 LINKLED pin. This is closed by default. Cut this trace to disable the RJ45's Link LED.</li> <li>ACT \u2014  The ACT jumper connects the RJ45 Activity LED to the WIZnet 5500 ACTLED pin. This is closed by default. Cut this trace to disable the RJ45's Link LED.</li> <li>3V3 SW EN \u2014 This three way jumper labeled 3V3 SW EN enables the XC6222 3.3V/700mA voltage regulator for the RTK EVK's secondary power to provide power for the RJ45 MagJack LEDs, W5500, ZED-F9P, NEO-D9S, USB Hub, and Qwiic OLED.  By default, the trace is pulled high. Cut the trace and add a solder blob between the center pad and the other jumper to allow the ESP32 to toggle power using pin 32.</li> <li>3V3 SW2 EN \u2014 This three way jumper labeled 3V3 SW2 EN enables the AP7361C 3.3V/1A voltage regulator for the RTK EVK's tertiary power to provide power for the LARA-R6. By default, the trace is pulled high. Cut the trace and add a solder blob between the center pad and the other jumper to allow the ESP32 to toggle power using pin 32.</li> </ul> Jumpers"},{"location":"hardware_overview/#dimensions","title":"Dimensions","text":"<p>The SparkFun RTK EVK is designed around the Metal Enclosure - Custom Aluminum Extrusion (6in. x 4in. PCB). You can find the dimensions of the enclosure below.</p> Enclosure and Panel Dimensions <p>Within the enclosure is the RTK EVK PCB. You can find the board dimensions below.</p> Board Dimensions <p>For users interested in the dimensions of the surveying antenna, it is also listed below from the SPK6618H datasheet.</p> SPK6618H Surveying Antenna Dimensions"},{"location":"introduction/","title":"Introduction","text":"<p>The SparkFun RTK EVK (Evaluation Kit) is the perfect development platform for your fixed or mobile high-precision positioning and navigation needs. In terms of connectivity, the SparkFun RTK EVK has the lot: WiFi / BT, Ethernet and LTE cellular! We called it the EVK (Evaluation Kit) as it truly covers all the options: L1 + L2 RTK GNSS, with L-Band correction built-in if needed, running on an agile processor with memory to spare!</p> <p> <ul> <li> <p> </p> <p> SparkFun RTK EVK    GPS-24342    Purchase from SparkFun  </p> </li> </ul> <p></p> <p>Note</p> <p>Currently, the RTK Everywhere firmware does not support cellular with the LARA-R6. However, we have written and tested extra code examples which will allow you to stream MQTT correction data from a u-blox PointPerfect Localized Distribution topic via the LARA-R6 cellular chip. This example demonstrates how easy it is to subscribe to PointPerfect and only receive the IP correction data you need for your location, minimizing your cellular data costs.</p> <p>In this tutorial we'll go over the hardware, assembly, and how get started with the SparkFun RTK.</p>"},{"location":"introduction/#kit-contents","title":"Kit Contents","text":"<p>The SparkFun RTK EVK comes with everything you need to get up and running. Our kit includes:</p> <ul> <li>1x Cased GNSS Receiver</li> <li>1x L1/L2/L5 GNSS Surveying Antenna</li> <li>1x Reinforced RG58 TNC-SMA Cable (10m)</li> <li>1x RPSMA WiFi / Bluetooth Antenna</li> <li>2x SMA LTE Cellular Antennas</li> <li>1x 32GB microSD Card (Class 10)</li> <li>1x USB-C Power Supply (5V, 1A wall charger)</li> <li>1x USB-C Cable (A to C, 2m)</li> <li>1x Ethernet Cable (CAT-6, 1m)</li> <li>1x Hologram eUICC nano-SIM card</li> </ul> What's in the Box?"},{"location":"introduction/#gnss-mounting-accessories","title":"GNSS Mounting Accessories","text":"<p>Depending on where you are installing the SparkFun RTK EVK, you also might need some mounting accessories to mount the GNSS antenna. You will want to mount the antenna in a location with the best view to of the sky (i.e. a roof).</p> <ul> <li> <p> </p> <p> GNSS Magnetic Antenna Mount - 5/8\" 11-TPI    GPS-21257 </p> </li> </ul> <ul> <li> <p> </p> <p> GNSS Antenna Mounting Hardware Kit    KIT-22197 </p> </li> </ul> <p>The RTK EVK comes with a custom extruded aluminum enclosure. The slotted flanges make it easy to install and secure the enclosure in many locations. If you are going to permanently install it up on a roof, you're going to need a suitable weatherproof box too. We found that the Orbit 57095 - also available from Amazon - was a good one back when we put together our first DIY GNSS Reference Station.</p> <ul> <li> <p> </p> <p> How to Build a DIY GNSS Reference Station </p> </li> </ul> <p>AC Not Required!</p> <p>The Orbit enclosure comes with a built-in power outlet, but you don't actually need it! The RTK EVK can be powered by Power-over-Ethernet (PoE), meaning all you really need to run up to the roof is a standard 8-core CAT-6 Ethernet cable. Choose a PoE Ethernet Switch that meets your needs. We have had good experiences with the TP-Link TL-SG1005P - available from many retailers including Amazon.</p>"},{"location":"introduction/#gnss-interface-cable","title":"GNSS Interface Cable","text":"<p>The following interface cables are great if say you are mounting the SparkFun RTK EVK in your home on a desk or lab bench and installing the antenna outdoors.</p> <ul> <li> <p> </p> <p> Interface Cable - SMA Female to SMA Male (10m, RG58)    CAB-21281 </p> </li> </ul> <ul> <li> <p> </p> <p> Interface Cable - RP-SMA Male to RP-SMA Female (10M, RG58)    CAB-22038 </p> </li> </ul>"},{"location":"introduction/#memory-cards","title":"Memory Cards","text":"<p>Finally, if you're going to be logging a lot of data, you might want to stock up on 32GB microSD cards too. The RTK EVK can log 'raw' GNSS data messages (RAWX and SFRBX) at 4Hz if desired. At that rate, you're logging about 10kB per second, close to 40MB per hour or 1GB per day!</p> <ul> <li> <p> </p> <p> microSD Card - 32GB (Class 10)    COM-19041 </p> </li> </ul>"},{"location":"introduction/#tools","title":"Tools","text":"<p>Below are a few tools and accessories that you may need when connecting to the I/O terminal block on the back of the RTK EVK.</p> <ul> <li> <p> </p> <p> iFixit Moray Driver Kit    TOL-25568 </p> </li> </ul> <ul> <li> <p> </p> <p> Wire Strippers - 30AWG (Hakko)    TOL-12630 </p> </li> </ul> <ul> <li> <p> </p> <p> Hook-Up Wire - Assortment (Solid Core, 22 AWG)    PRT-11367 </p> </li> </ul>"},{"location":"introduction/#suggested-reading","title":"Suggested Reading","text":"<p>If you aren\u2019t familiar with the following concepts, we also recommend checking out a few of these tutorials before continuing.</p> <ul> <li> <p> </p> <p> What is GPS RTK? </p> </li> </ul> <ul> <li> <p> </p> <p> Getting Started with U-Center for u-blox </p> </li> </ul> <ul> <li> <p> </p> <p> GPS-RTK2 Hookup Guide </p> </li> </ul> <ul> <li> <p> </p> <p> Setting up a Rover Base RTK System </p> </li> </ul> <ul> <li> <p> </p> <p> How to Build a DIY GNSS Reference Station </p> </li> </ul> <p>You may also be interested in the following blog posts on GNSS technologies.</p> <ul> <li> <p> <p>GPS vs GNSS</p> <li> <p> <p>What is Correction Data?</p> <li> <p> <p>Real-Time Kinematics Explained</p> <li> <p> <p>New Video: Unlocking High-Precision RTK Positioning</p>"},{"location":"product_manual/","title":"RTK Everywhere Firmware","text":"<p>The SparkFun RTK EVK runs on universal firmware created by SparkFun called RTK Everywhere. You can find its source through the RTK Everywhere GitHub repo.</p> Screenshot Firmware through Serial Terminal <p>Make sure to check out the Quick Start Guide for the RTK EVK for a summary of how to get it connected over Bluetooth. You will also find more information about navigating through the configuration menu, updating firmware, and more in the product manual!</p> RTK Everywhere Product Manual: Quickstart Guide"},{"location":"resources/","title":"Resources","text":"<p>Now that you've successfully got your SparkFun RTK EVK up and running, it's time to incorporate it into your own project! For more information, check out the resources below:</p> <ul> <li>Schematic (PDF)</li> <li>Eagle Files (ZIP)</li> <li>Board Dimensions (PNG)</li> <li>Case Dimensions (ZIP)</li> <li>RTK Everywhere Product Manual</li> <li>Datasheets<ul> <li>ESP32-WROOM</li> <li>ZED-F9P</li> <li>NEO-D9S</li> <li>LARA-R6</li> </ul> </li> <li>Integration Manuals<ul> <li>ZED-F9P</li> <li>NEO-D9S</li> <li>LARA-R6</li> </ul> </li> <li>LARA-R6 AT Commands Manual</li> <li>LARA-R6 firmware update package links and instructions<ul> <li>Section 8 of the document contains links to m-center, EasyFlash and the USB driver</li> <li>The firmware itself is available in the u-blox documentation &amp; resources. Be sure to select the LARA-R6001D-01B-00.</li> </ul> </li> <li>RTK Everywhere Firmware</li> <li>RTK Everywhere Firmware Binaries</li> <li>Additional ESP32 Code Examples</li> <li>GitHub Hardware Repo</li> <li>SFE Product Showcase</li> </ul> <p>For user that are taking advantage of the Zero-Touch RTK for correction services, make sure to click on the link below! This link will allow you to register, reactivate, or cancel your RTK EVK's correction service.</p> <ul> <li>SparkFun RTK EVK Correction Service Registration &amp; Renewal</li> </ul>"},{"location":"single_page/","title":"Introduction","text":"<p>The SparkFun RTK EVK (Evaluation Kit) is the perfect development platform for your fixed or mobile high-precision positioning and navigation needs. In terms of connectivity, the SparkFun RTK EVK has the lot: WiFi / BT, Ethernet and LTE cellular! We called it the EVK (Evaluation Kit) as it truly covers all the options: L1 + L2 RTK GNSS, with L-Band correction built-in if needed, running on an agile processor with memory to spare!</p> <p> <ul> <li> <p> </p> <p> SparkFun RTK EVK    GPS-24342    Purchase from SparkFun  </p> </li> </ul> <p></p> <p>Note</p> <p>Currently, the RTK Everywhere firmware does not support cellular with the LARA-R6. However, we have written and tested extra code examples which will allow you to stream MQTT correction data from a u-blox PointPerfect Localized Distribution topic via the LARA-R6 cellular chip. This example demonstrates how easy it is to subscribe to PointPerfect and only receive the IP correction data you need for your location, minimizing your cellular data costs.</p> <p>In this tutorial we'll go over the hardware, assembly, and how get started with the SparkFun RTK.</p>"},{"location":"single_page/#kit-contents","title":"Kit Contents","text":"<p>The SparkFun RTK EVK comes with everything you need to get up and running. Our kit includes:</p> <ul> <li>1x Cased GNSS Receiver</li> <li>1x L1/L2/L5 GNSS Surveying Antenna</li> <li>1x Reinforced RG58 TNC-SMA Cable (10m)</li> <li>1x RPSMA WiFi / Bluetooth Antenna</li> <li>2x SMA LTE Cellular Antennas</li> <li>1x 32GB microSD Card (Class 10)</li> <li>1x USB-C Power Supply (5V, 1A wall charger)</li> <li>1x USB-C Cable (A to C, 2m)</li> <li>1x Ethernet Cable (CAT-6, 1m)</li> <li>1x Hologram eUICC nano-SIM card</li> </ul> What's in the Box?"},{"location":"single_page/#gnss-mounting-accessories","title":"GNSS Mounting Accessories","text":"<p>Depending on where you are installing the SparkFun RTK EVK, you also might need some mounting accessories to mount the GNSS antenna. You will want to mount the antenna in a location with the best view to of the sky (i.e. a roof).</p> <ul> <li> <p> </p> <p> GNSS Magnetic Antenna Mount - 5/8\" 11-TPI    GPS-21257 </p> </li> </ul> <ul> <li> <p> </p> <p> GNSS Antenna Mounting Hardware Kit    KIT-22197 </p> </li> </ul> <p>The RTK EVK comes with a custom extruded aluminum enclosure. The slotted flanges make it easy to install and secure the enclosure in many locations. If you are going to permanently install it up on a roof, you're going to need a suitable weatherproof box too. We found that the Orbit 57095 - also available from Amazon - was a good one back when we put together our first DIY GNSS Reference Station.</p> <ul> <li> <p> </p> <p> How to Build a DIY GNSS Reference Station </p> </li> </ul> <p>AC Not Required!</p> <p>The Orbit enclosure comes with a built-in power outlet, but you don't actually need it! The RTK EVK can be powered by Power-over-Ethernet (PoE), meaning all you really need to run up to the roof is a standard 8-core CAT-6 Ethernet cable. Choose a PoE Ethernet Switch that meets your needs. We have had good experiences with the TP-Link TL-SG1005P - available from many retailers including Amazon.</p>"},{"location":"single_page/#gnss-interface-cable","title":"GNSS Interface Cable","text":"<p>The following interface cables are great if say you are mounting the SparkFun RTK EVK in your home on a desk or lab bench and installing the antenna outdoors.</p> <ul> <li> <p> </p> <p> Interface Cable - SMA Female to SMA Male (10m, RG58)    CAB-21281 </p> </li> </ul> <ul> <li> <p> </p> <p> Interface Cable - RP-SMA Male to RP-SMA Female (10M, RG58)    CAB-22038 </p> </li> </ul>"},{"location":"single_page/#memory-cards","title":"Memory Cards","text":"<p>Finally, if you're going to be logging a lot of data, you might want to stock up on 32GB microSD cards too. The RTK EVK can log 'raw' GNSS data messages (RAWX and SFRBX) at 4Hz if desired. At that rate, you're logging about 10kB per second, close to 40MB per hour or 1GB per day!</p> <ul> <li> <p> </p> <p> microSD Card - 32GB (Class 10)    COM-19041 </p> </li> </ul>"},{"location":"single_page/#tools","title":"Tools","text":"<p>Below are a few tools and accessories that you may need when connecting to the I/O terminal block on the back of the RTK EVK.</p> <ul> <li> <p> </p> <p> iFixit Moray Driver Kit    TOL-25568 </p> </li> </ul> <ul> <li> <p> </p> <p> Wire Strippers - 30AWG (Hakko)    TOL-12630 </p> </li> </ul> <ul> <li> <p> </p> <p> Hook-Up Wire - Assortment (Solid Core, 22 AWG)    PRT-11367 </p> </li> </ul>"},{"location":"single_page/#suggested-reading","title":"Suggested Reading","text":"<p>If you aren\u2019t familiar with the following concepts, we also recommend checking out a few of these tutorials before continuing.</p> <ul> <li> <p> </p> <p> What is GPS RTK? </p> </li> </ul> <ul> <li> <p> </p> <p> Getting Started with U-Center for u-blox </p> </li> </ul> <ul> <li> <p> </p> <p> GPS-RTK2 Hookup Guide </p> </li> </ul> <ul> <li> <p> </p> <p> Setting up a Rover Base RTK System </p> </li> </ul> <ul> <li> <p> </p> <p> How to Build a DIY GNSS Reference Station </p> </li> </ul> <p>You may also be interested in the following blog posts on GNSS technologies.</p> <ul> <li> <p> <p>GPS vs GNSS</p> <li> <p> <p>What is Correction Data?</p> <li> <p> <p>Real-Time Kinematics Explained</p> <li> <p> <p>New Video: Unlocking High-Precision RTK Positioning</p>"},{"location":"single_page/#hardware-overview","title":"Hardware Overview","text":"<p>The electronics of the SparkFun RTK EVK is enclosed in a custom extruded aluminum case with machined end panels and slotted flanges.</p> Front View Back View <p>The image below shows a top and bottom view of the populated PCB without the enclosure.</p> PCB Top View PCB Bottom View"},{"location":"single_page/#power","title":"Power","text":"<p>The SparkFun RTK EVK can be powered from the connectors on the front or the back of the board. There is no internal battery. Schottky protection diodes and a resettable fuse are included to prevent conflicting voltages and overvoltage protection. Voltage is then regulated down to 3.3V through the three voltage regulators.</p> <ul> <li>CONFIG ESP32 \u2014 The CONFIG ESP32 includes a USB C connector to power the RTK EVK. Users can also upload code or connect to the ESP32 to a serial terminal.</li> <li>CONFIG UBLOX \u2014 The CONFIG UBLOX includes a USB C connector to power the RTK EVK as well. A USB hub is connected to this port and connects to the ZED-F9P, NEO-D9S, and LARA-R6 for users that are interested in connecting them to u-center, m-center or updating the firmware.</li> </ul> USB Connectors Highlighted in Front USB Connectors Highlighted PCB Top View <p>Power can also be provided from the I/O screw terminals or PoE.</p> <ul> <li>VIN+ \u2014 This terminal can be used to feed in external DC power between +9V and +36V. This is for users that want to power the unit from a vehicle battery or any other source in that voltage range. Connect VIN+ to the battery +ve. The voltage is first regulated to 5V by a fully-isolated DC-DC converter before being regulated again to 3.3V.</li> <li>VIN- \u2014 For external DC power, connect this terminal to the chassis, battery -ve or 0V. Note that there is no direct connection between VIN- and GND as the internal DC-DC converter is fully isolated. It is possible to link VIN- to the adjacent GND terminal, but doing so will bypass the voltage isolation and could introduce a ground loop.</li> <li>GND \u2014 The internal ground or 0V for the system.</li> <li>Ethernet (PoE) \u2014 The input voltage through the RJ45 connector can be between +36V and +57V. The voltage is first regulated down to 5V by the isolated PoE module before being regulated agin to 3.3V.</li> </ul> USB Connector, Ethernet POE, and Power Input on Screw Terminals Highlighted in Back Ethernet POE, and Power Input on Screw Terminals Highlighted on PCB <p>There is also an output power pin for 3.3V on the I/O screw terminal.</p> <ul> <li>3V3 \u2014 This pin is the output of one of the 3.3V voltage regulators. Note that this is only connected to the secondary power. This net is also connected to the microSD card socket, ZED-F9P, NEO-D9S, USB Hub, MagJack RJ45 connector's LEDs, and WIZnet W5500.</li> </ul> 3.3V Input on Screw Terminals Highlighted in Back 3.3V Input on Screw Terminals Highlighted on PCB"},{"location":"single_page/#ch340-usb-to-serial-converter","title":"CH340 USB-to-Serial Converter How to Install CH340 Drivers","text":"<p>A CH340 USB-to-Serial converter is included between the USB-C connector and the ESP32. The chip can be used to send serial data between the RTK EVK and computer. You can view the output or configure the device through a serial terminal. You can also manually upload new firmware as well.</p> CH340 USB-to-Serial Converter Highlighted <p>The driver should automatically install on most operating systems. However, there is a wide range of operating systems out there. You may need to install drivers the first time you connect the chip to your computer's USB port or when there are operating system updates. For more information, check out our How to Install CH340 Drivers Tutorial.</p>"},{"location":"single_page/#esp32-wrover-module","title":"ESP32-WROVER Module","text":"<p>The RTK Everywhere firmware is pre-loaded with the RTK EVK and flashed to the ESPRESSIF ESP32-WROVER module (with 16MB flash and 8MB PSRAM). The ESP32 handles all the processes. You can configure the EVK as a RTK base and push corrections to an NTRIP Caster. You can also configure the EVK as a RTK Rover and use corrections delivered over WiFi or Bluetooth. You can even update firmware over-the-air. For more information, we recommend checking out the RTK Everywhere Product Manual.</p> ESP32 Highlighted <p>Note</p> <p>The ESP32-WROVER module can only connect to a 2.4GHz WiFi network. Unfortunately, 5GHz is not supported on the ESP32-WROVER module.</p> <p>For users that want to configure the ESP32 using a serial terminal, you will simply need to connect the CONFIG ESP32 to your computer's USB port. Once connected, open a serial terminal set to 115200 baud and press any key to open the serial configuration menu. Of course, this is only one method of adjusting the settings. You can also change the settings through WiFi, Bluetooth, and a text file saved on a microSD card.</p>"},{"location":"single_page/#esp32-primary-i2c-port","title":"ESP32 Primary I<sup>2</sup>C Port","text":"<p>The screw terminal on the back includes an I<sup>2</sup>C port. This is connected to the ESP32's primary I<sup>2</sup>C port and is shared by the ZED-F9P and NEO-D9S.</p> <ul> <li>SCL \u2014 The ESP32 I<sup>2</sup>C bus clock on pin 22. The logic level is 3.3V. Currently, there are no pull-up resistors attached to this line. To configure, you will need to add a solder blob to the I<sup>2</sup>C jumper.</li> <li>SDA \u2014ESP32 I<sup>2</sup>C bus data on pin 21. The logic level is 3.3V. Currently, there are no pull-up resistors attached to this line. To attach the 2.2k\u03a9 pull-up resistors to the port, you will just need to add a solder blob to the I<sup>2</sup>C jumper.</li> </ul> <p>Note</p> <p>3.3V and GND are also conveniently placed next to the SCL and SDA pins. These follow the same pinout as most of the SparkFun I<sup>2</sup>C breakout boards with PTHs.</p> I<sup>2</sup>C Port Highlighted I<sup>2</sup>C Port Highlighted on PCB <p>The I<sup>2</sup>C peripherals connected to the primary I<sup>2</sup>C port and their address are listed below:</p> <ul> <li>ZED-F9P \u2014 0x42 (default)</li> <li>NEO-D9S \u2014 0x43 (default)</li> </ul>"},{"location":"single_page/#esp32-secondary-i2c-port","title":"ESP32 Secondary I<sup>2</sup>C Port","text":"<p>Inside of the enclosure, there is a Qwiic vertical port available. This is connected to the Qwiic OLED via a Qwiic cable. This port is connected to the ESP32's secondary I<sup>2</sup>C port with SCL connected to pin 15 and SDA connected to pin 12. The logic level is also 3.3V. Currently, there are no pull-up resistors attached to this line. To attach the 2.2k\u03a9 pull-up resistors to the port, you will just need to add a solder blob to the I<sup>2</sup>C jumper.</p> I2C Port Highlighted <p>The I<sup>2</sup>C peripheral connected to the secondary I<sup>2</sup>C port and their address is listed below:</p> <ul> <li>Qwiic OLED - (1.3in., 128x64) \u2014 0x3D (default)</li> </ul>"},{"location":"single_page/#qwiic-oled-display","title":"Qwiic OLED Display","text":"<p>The RTK EVK includes the SparkFun Qwiic OLED - (1.3in., 128x64). This is connected to the ESP32 via a Qwiic port contained within the enclosure. As stated earlier, the default address for the display is 0x3D. The display provides useful information about the RTK EVK without needing to connect to a serial terminal.</p> OLED Display Highlighted <p>Below show some of the possible outputs from the RTK EVK. The icons are explained further in the RTK Everywhere Product Manual &gt; Hardware &gt; Displays.</p> <p>The image below shows the Bluetooth MAC address of the RTK EVK on the upper left hand corner of the screen. If there is a Bluetooth connection, the Blueooth symbol will display. To the right is the WiFi symbol. To the right of the WiFi symbol is the icon indicating the selected dynamic model, in this case it's the default portable icon. On the upper far right, is the Ethernet connection symbol. Below the Bluetooth MAC address is the RTK float solution symbol. The number to the right indicates the horizontal position accuracy. In this case, there is an RTK float since the value is between 0.400 meters to 0.200 meters. To the right is the satellites in view symbol and number of satellites. The additional antenna lines indicates that the RTK EVK that there is successful reception and decryptions of L-band corrections. Finally, the rotating semi-circle indicates the RTK EVK firmware is running. This changes to a logging icon when data is being logged to microSD card.</p> OLED Display Output <p>The image below is similar to the previous display output. You'll notice a few differences. The arrow pointing down indicates that there are corrections being received. The Ethernet symbol is also not displaying since there was no Ethernet connection at that moment. The horizontal positional accuracy indicates that there is a RTK fixed solution with the double cross hairs since the value is below 0.200 meters. Finally, the display is showing 29 satellites in view and no L-band corrections.</p> OLED Display with RTK Fixed Solution"},{"location":"single_page/#zed-f9p-module","title":"ZED-F9P Module","text":"<p>The RTK EVK wouldn't be a an RTK without well... a high precision RTK. The RTK EVK includes a built-in u-blox ZED-F9P module for high precision GNSS. You will need to connect an active multiband antenna that is capable of receiving L1 and L2 signals. The ZED-F9P can be set as a base station or rover. There are several options to send or receive correction data depending on the mode: Ethernet, WiFi network, LTE cellular network, or the NEO-D9S. Note that the RTK Everywhere firmware does not currently support cellular, but there are separate code examples showing how to receive localized corrections from PointPerfect via cellular. As stated earlier, the ZED-F9P is connected to the primary I<sup>2</sup>C port and uses the default address of 0x42.</p> ZED-F9P Highlighted <p>Below are a few specifications taken from the ZED-F9P's datasheet:</p> <ul> <li>Concurrent reception of GPS, GLONASS, Galileo, and BeiDou</li> <li>Receives both L1C/A and L2C bands</li> <li>184-channel u-blox F9 engine</li> <li>Time to First Fix: 25s (cold), 2s (hot)</li> <li>Max Navigation Rate: 20Hz / 25Hz depending on mode</li> <li>Horizontal Position Accuracy: 2.5m without RTK; 0.010m with RTK</li> <li>Max Altitude: 50km (31 miles)</li> <li>Max Velocity: 500m/s (1118mph)</li> </ul>"},{"location":"single_page/#zed-f9p-secondary-uart-port","title":"ZED-F9P Secondary UART Port","text":"<p>The screw terminal on the back includes a UART port. This is connected to the ZED-F9P's secondary UART port (UART2) for users that want to connect to other high precision GNSS modules for correction data.</p> <ul> <li>TX2 \u2014 The ZED-F9P's UART2 transmit pin. The logic level is 3.3V. Users can connect this pin to a radio module or directly to a high precision GNSS module's RX pin to provide correction data to other rovers.</li> <li>RX2 \u2014 The ZED-F9P's UART2 receive pin. The logic level is 3.3V. Users can connect this pin to a radio module or directly to a high precision GNSS module's TX pin to receive correction data provided by another base station.</li> </ul> ZED-F9P UART Correction Port Highlighted ZED-F9P UART Correction Port Highlighted on PCB"},{"location":"single_page/#zed-f9p-external-interrupt","title":"ZED-F9P External Interrupt","text":"<p>The screw terminal on the back includes an external interrupt for the ZED-F9P. The interrupt can either be an input/output pin. This can be configured using u-center to bring the module out of deep sleep or to output an interrupt for various module states. In the RTK Everywhere firmware, this terminal can be used to trigger and log a UBX-TIM-TM2 timing message. The logic level is 3.3V.</p> ZED-F9P External Interrupt Highlighted ZED-F9P External Interrupt Highlighted on PCB"},{"location":"single_page/#zed-f9p-time-pulse","title":"ZED-F9P Time Pulse","text":"<p>The screw terminal on the back labeled as TP includes ZED-F9Ps time pulse output (i.e. the pulse-per-second or PPS output). This pulses at 1Hz when the module gets basic GPS/GNSS position lock and can be configured using the u-center. The logic level is 3.3V.</p> ZED-F9P Time Pulse Highlighted ZED-F9P Time Pulse Highlighted on PCB"},{"location":"single_page/#neo-d9s","title":"NEO-D9S","text":"<p>The RTK EVK includes the built-in u-blox NEO-D9S for correction data. You will need to connect an antenna that is capable of receiving signals from the L-band to access u-blox PointPerfect correction service. The NEO-D9S is connected to the primary I<sup>2</sup>C port and uses the default address of 0x43. You will need a service provider to access the correction data.</p> NEO-D9S Highlighted <p>Below are a few specifications taken from the NEO-D9S's datasheet:</p> <ul> <li>L-Band data receiver compliance: SESTB28A</li> <li>Frequency range: 1525 to 1559MHz</li> <li>Sensitivity: 133dBm</li> <li>Time to First Frame: &lt;10s</li> <li>Receives PMP messages from Inmarsat Geosynchronous Satellites</li> </ul>"},{"location":"single_page/#microsd-card-socket","title":"MicroSD Card Socket","text":"<p>The front of the RTK EVK includes a microSD card socket. Insert a microSD card into the socket until it clicks in place. Pushing the microSD card again will eject the memory card. This is connected to the ESP32's SPI port. Power is provided by the secondary power source. Users can manually flash the firmware binaries using the microSD card as opposed to over-the-air updates. Typically, the microSD card is for datalogging. The microSD card can also hold the user preferences for anyone that is interested in deploying multiple RTK EVKs with the same settings out in the field.</p> MicroSD Card Slot Highlighted MicroSD Card Slot Highlighted on PCB"},{"location":"single_page/#lara-r6-cellular-module","title":"LARA-R6 Cellular Module","text":"<p>The RTK EVK also includes the u-blox LARA-R6 cellular module for users that need to connect to a LTE cellular network. The module is connected to the ESP32 via UART.</p> LARA-R6 Highlighted <p>Below are a few specifications taken from the LARA-R6's datasheet:</p> <ul> <li>Region: Global</li> <li>LTE FDD Bands: 1, 2, 3, 4, 5, 7, 8, 12, 13, 18, 19, 20, 26, &amp; 28</li> <li>Certifications and approvals:</li> <li>PTCRB, GCF, FCC, ISED, RED, UKCA, NCC, RCM, Giteki, Anatel, KC, AT&amp;T,</li> <li>Verizon, T-Mobile, Deutsche Telekom, Telefonica, NTT DoCoMo, SBM, KDDI, Telstra</li> </ul> <p>Note</p> <p>Although the LARA supports GSM/GPRS, the RTK EVK does not due to the high current required.</p> <p>Note</p> <p>Currently, the RTK Everywhere firmware does not support cellular with the LARA-R6. However, we have written and tested extra code examples which will allow you to stream MQTT correction data from a u-blox PointPerfect Localized Distribution topic via the LARA-R6 cellular chip. This example demonstrates how easy it is to subscribe to PointPerfect and only receive the IP correction data you need for your location, minimizing your cellular data costs.</p>"},{"location":"single_page/#nano-sim-card-socket","title":"Nano SIM Card Socket","text":"<p>To connect to an cellular network with the built-in u-blox LARA-R6 (specifically the LARA-R6001D), you will need a nano SIM card. The cellular module works with most major North American carriers (Verizon, T-Mobile, AT&amp;T, etc.). Make sure to check with your network service provider for compatibility. You also may need approval with the service carrier before the service is activated. We recommend using the Hologram SIM Card. Insert the SIM with the contacts facing down, insert the edge with the chamfered corner first.</p> Nano SIM Card Socket Highlighted Nano SIM Card Socket Highlighted on PCB"},{"location":"single_page/#wiznet-w5500-ic-ethernet-jack-and-poe","title":"WIZnet W5500 IC, Ethernet Jack, and PoE","text":"<p>The RTK EVK includes a built-in Ethernet circuitry. You can connect an Ethernet cable to the back of the RTK EVK's RJ45 MagJack port. This connector includes status LEDs for Link and Activity. These LEDs can be disabled by cutting the jumpers on the back of the PCB. The port connects to the Power-over-Ethernet (PoE) module and WIZnet W5500 Ethernet transceiver. 10/100Mbps is supported with auto-negotiation. As stated earlier, the PoE module can be powered using the standard PoE voltages between +36V to +57V. Make sure to choose a PoE Ethernet Switch that meeds your needs. We have had good experience with the TP Link TL-SG1005P - available from many retailers including Amazon.</p> Ethernet Jack HighlightedWIZnet W5500 IC, Ethernet Jack, and PoE Module Highlighted"},{"location":"single_page/#antenna-connections","title":"Antenna Connections","text":"<p>The back of the SparkFun RTK EVK includes a few connectors for cellular, GNSS, and WiFi antennas.</p> <ul> <li>Cell 1 \u2014 The SMA Connector labeled as Cell 1 is for the u-blox LARA-R6006. This connection represents the main RF input/output for LTE/3G/2G RF signals transmission and reception. This is intended to connect the LTE Hinged External Antenna - 698MHz-2.7GHz.</li> <li>Cell 2 \u2014 The SMA Connector labled as Cell 1 is for the u-blox LARA-R606. This connection represents the secondary RF input for LTE/3G Rx diversity and LTE MIMO 2x2 down-link RF signals reception. This is intended to connect the second LTE Hinged External Antenna - 698MHz-2.7GHz.</li> <li> <p>GNSS \u2014 The SMA connector labeled as GNSS is for the u-blox ZED-F9P and NEO-D9S. This is connected to a GNSS splitter (Power Divider) and allows you to connect a single GNSS antenna for both modules. This is intended to connect an active multiband GNSS antenna using the SMA male to TNC male interface cable that is included in the kit. The RTK EVK provides 5V on this connector for an active multiband antenna instead of the usual 3.3V. Short-circuit and open-circuit detection is built into this connection as well. The following icons will flash whenever the RTK EVK does not detect an antenna (i.e. an open circuit) or if there is a short in the cable. Next to the icons will also indicate that there will be 0 satellites in view.</p> <p> Antenna Open Circuit Highlighted Antenna Short Circuit Highlighted </p> </li> <li> <p>ESP32 \u2014 The RP-SMA connector labeled as ESP32 is for the ESP32-WROVER. This is intended to connect the 2.4GHz WiFi/BT antenna.</p> </li> </ul> Antenna Connectors Highlighted on Back Antenna Connectors Highlighted on PCB"},{"location":"single_page/#buttons","title":"Buttons","text":"<p>There are two buttons located on the front of the SparkFun RTK EVK.</p> <ul> <li>RESET \u2014 The reset button is available for users that need to manually reset the ESP32. The reset button sits flush against the front panel to prevent users from accidentally resetting the RTK EVK. You will need to press the button firmly or use a pen.</li> <li>MODE The mode button is available for users that want to change the mode. This button is connected to pin 0 on the ESP32 and can also be used as a boot button to set the ESP32 into bootloader mode when manually uploading code with the reset button.</li> </ul> Reset and Mode/Boot Buttons Highlighted Reset and Mode/Boot Buttons Highlighted on PCB <ul> <li> <p>RTK Modes \u2014 The available modes for the RTK Everywhere firmware are listed below. A single press brings up the mode menu. Press the button again to step through the available modes listed below. Pause on the highlighted mode then double-click to select it and change to that mode. For more information on the modes, make sure to check out the RTK Everywhere Manual.</p> <ul> <li>BASE<ul> <li>This is the default mode as it is the mode we think most users will want to use - but you always surprise us with the novel ways you use our products!</li> <li>The RTK EVK will perform a short 1-2 minute \"survey-in\" to establish the approximate position of the antenna (~1m accuracy).</li> <li>It will then start generating RTCM correction data and - once configured - can send it to an NTRIP Caster over Ethernet or WiFi.</li> <li>The RTCM data will also be output as 3.3V Serial (UART) data on the ZED-F9P TX2 I/O screw connection on the rear panel. You can connect a radio transceiver to that pin if desired.</li> <li>You can establish the antenna position more accurately by collecting 'raw' satellite data for ~24 hours and post-processing it. You can find full instructions in the RTK Everywhere Product Manual.</li> </ul> </li> <li>ROVER<ul> <li>The RTK EVK can of course also be used as a RTK Rover.</li> <li>In Rover mode, the antenna position and other data is logged to microSD card.</li> <li>Once configured, RTCM correction data can be received over Ethernet, WiFi or Bluetooth from a NTRIP Caster and used to achieve an accuracy of ~1.4cm under good conditions.</li> <li>Use Rover mode to collect the 'raw' satellite data to establish your antenna's position accurately for Base mode.</li> </ul> </li> <li>NTP<ul> <li>The RTK EVK can also act as a Network Time Protocol Server - servicing NTP requests over Ethernet.</li> <li>The firmware defaults to using DHCP to obtain an IP Address. But you can also configure it to use a fixed IP Address and can define the DNS, Gateway and Subnet Mask too.</li> <li>You can find full instructions in the RTK Everywhere Product Manual.</li> </ul> </li> <li>Cfg Eth (Configure-Via-Ethernet)<ul> <li>Abbreviated as \"Cfg Eth\", Configure-Via-Ethernet mode is a dedicated mode where the RTK EVK Station can be configured via a web page over Ethernet.</li> <li>This mode works best with exclusive access to the WIZnet W5500 chip and the SPI bus and so the RTK EVK actually reboots when this mode is selected.</li> <li>When leaving this mode - either by exiting the web page or by pressing the Mode button - the RTK EVK will reboot again into Base, Rover or NTP mode. The new mode is selected by the small drop-down box on the System tab.</li> <li>You can find full instructions in the RTK Everywhere Product Manual.</li> </ul> </li> <li>Cfg WiFi<ul> <li>Abbreviated as \"CfgWiFi\", Configure-Via-WiFi mode is another dedicated mode where the RTK EVK can be configured via a web page over WiFi.</li> <li>By default, the RTK EVK will appear as a WiFi Hot Spot / Access Point - but it can be configured to connect to your preferred WiFi network too.</li> <li>The RTK EVK will reboot when leaving this mode - to apply any changes made.</li> <li>You can find full instructions in the RTK Everywhere Product Manual** (Configure-Via-WiFi)</li> </ul> </li> <li>Get Keys<ul> <li>When there is an Ethernet or WiFi connection, the RTK EVK can access the PointPerfect system and automatically obtain keys to allow the decryption of corrections.</li> <li>More details are provided in the RTK Everywhere Product Manual</li> </ul> </li> <li>E-Pair (ESP NOW Pairing)<ul> <li>Abbreviated as \"E-Pair\", ESP NOW is a way of linking two ESP32 processors via WiFi so that they can communicate with each other, line of sight up to approximately 250m.</li> <li>The ESP NOW link allows a base to share correction data with a single rover.</li> <li>More details are provided in the RTK Everywhere Product Manual</li> </ul> </li> </ul> <p> OLED Display Cycling Through Modes </p> </li> <li> <p>Bootloader Mode \u2014 The boot button usually allows users to force the ESP32 into bootloader mode to manually upload new code to the ESP32.</p> </li> </ul>"},{"location":"single_page/#leds","title":"LEDs","text":"<p>There are three LEDs available:</p> <ul> <li>STATUS \u2014 The built-in STATUS LED is used to indicate when the BASE mode has completed its survey-in.</li> <li>LINK \u2014 The built-in LINK LED on the RJ45 MagJack connector is connected to the WIZnet 5500's LINKLED pin and is used to indicate when there is a Ethernet Link.</li> <li>ACT \u2014 The built-in ACT LED on the RJ45 MagJack connector is connected to the WIZnet 5500's ACTLED pin and used to indicate when there is Ethernet activity.</li> </ul> LED Highlighted LEDs on Ethernet Connector Highlighted"},{"location":"single_page/#jumpers","title":"Jumpers","text":"<p>Note</p> <p>If this is your first time working with jumpers, check out the How to Work with Jumper Pads and PCB Traces tutorial for more information.</p> <p>The RTK EVK includes various jumpers on the back of the PCB.</p> <ul> <li>SHLD \u2014 There are two jumpers labeled as SHLD on the back of the PCB. These jumpers connect the USB Type C connector's shield pin to GND. By default, these are closed. Cut this to isolate the USB Type C connector's shield pin for the ESP32 and the ZED-F9P.</li> <li>MEAS \u2014 To enable measurements and determine how much power the RTK EVK uses, we've added a NC (normally closed) jumper between the two MEAS PTH pins. By cutting this jumper, the voltage connecting to the 3.3V voltage regulator input is interrupted. Soldering in a male jumper or wires into the accompanying holes will give you the ability to insert a current meter and precisely monitor how much current your application is consuming.</li> <li>VIN+ \u2014 The VIN+ jumper connects the I/O Screw Terminal to the 5V DC-DC converter's VIN+ pin. This is closed by default. Cut this trace to disable the connection.</li> <li>VIN- \u2014 The VIN- jumper connects the I/O Screw Terminal to the 5V DC-DC converter's VIN- pin. This is closed by default. Cut this trace to disable the connection.</li> <li>PW+ \u2014 The PW+ jumper connects the RJ45 MagJack's PW+ pin to the DP9905 PoE's VIN+ pin. This is closed by default. Cut this trace to disable the connection.</li> <li>PW- \u2014 The PW- jumper connects the RJ45 MagJack's PW- pin to the DP9905 PoE's VIN- pin. This is closed by default. Cut this trace to disable the connection.</li> <li>GNSS Reset \u2014 The GNSS reset jumper is open by default. Adding a solder blob will connect the reset button (which is currently only connected to the ESP32's reset pin) to the reset pins on both the ZED-F9P and NEO-D9S. Pulling the pin low by pressing the button will initiate a reset on the ZED-F9P and NEO-D9S. This will delete all information and trigger a cold start. As stated in the integration manual, this should only be used as a recovery option. Compared to the other jumpers, this jumper includes a 1x2 PTH. Users can also break off a 1x2 standard male header and temporarily connect a 1x2 jumper.</li> <li>I<sup>2</sup>C \u2014 This three way jumper labeled <code>I<sup>2</sup>C</code> will connect to two pull-up resistors to the I<sup>2</sup>C data and clock lines when closed. For advanced users that do not have pull-up resistors attached to the I<sup>2</sup>C lines on their microcontroller, make sure to close the jumpers with a little solder blob.</li> <li>POE LOAD \u2014 The POE LOAD creates a dummy load of 100mA on the DC/DC converter output. This is closed by default. Cut this trace to disable the dummy load.</li> <li>WIZnet W5500 Mode Jumper \u2014 For users that want to configure the WIZnet W5500 mode, there are three jumpers available to adjust the network mode. By default, the jumpers are set to 111 or \"All capable, Auto-negotiation.\" For more information on the different modes, check out the WIZnet 5500 datasheet linked in the Resources.<ul> <li>PMODE0 \u2014 Pulled high. Add as solder jumper to pull the pin low.</li> <li>PMODE1 \u2014 Pulled high. Add as solder jumper to pull the pin low.</li> <li>PMODE2 \u2014 Pulled high. Add as solder jumper to pull the pin low.</li> </ul> </li> <li>LED \u2014 The LED jumper connects the status LED to the ESP32's pin 2. This is closed by default. Cut this trace to disable the status LED.</li> <li>LINK \u2014 The LINK jumper connects the RJ45 Link LED to the WIZnet 5500 LINKLED pin. This is closed by default. Cut this trace to disable the RJ45's Link LED.</li> <li>ACT \u2014  The ACT jumper connects the RJ45 Activity LED to the WIZnet 5500 ACTLED pin. This is closed by default. Cut this trace to disable the RJ45's Link LED.</li> <li>3V3 SW EN \u2014 This three way jumper labeled 3V3 SW EN enables the XC6222 3.3V/700mA voltage regulator for the RTK EVK's secondary power to provide power for the RJ45 MagJack LEDs, W5500, ZED-F9P, NEO-D9S, USB Hub, and Qwiic OLED.  By default, the trace is pulled high. Cut the trace and add a solder blob between the center pad and the other jumper to allow the ESP32 to toggle power using pin 32.</li> <li>3V3 SW2 EN \u2014 This three way jumper labeled 3V3 SW2 EN enables the AP7361C 3.3V/1A voltage regulator for the RTK EVK's tertiary power to provide power for the LARA-R6. By default, the trace is pulled high. Cut the trace and add a solder blob between the center pad and the other jumper to allow the ESP32 to toggle power using pin 32.</li> </ul> Jumpers"},{"location":"single_page/#dimensions","title":"Dimensions","text":"<p>The SparkFun RTK EVK is designed around the Metal Enclosure - Custom Aluminum Extrusion (6in. x 4in. PCB). You can find the dimensions of the enclosure below.</p> Enclosure and Panel Dimensions <p>Within the enclosure is the RTK EVK PCB. You can find the board dimensions below.</p> Board Dimensions <p>For users interested in the dimensions of the surveying antenna, it is also listed below from the SPK6618H datasheet.</p> SPK6618H Surveying Antenna Dimensions"},{"location":"single_page/#hardware-hookup","title":"Hardware Hookup","text":"<p>In this section, we'll go over how to connect to the SparkFun RTK EVK.</p>"},{"location":"single_page/#cellular-antenna","title":"Cellular Antenna","text":"<p>To take advantage of the LTE cellular network with the LARA-R6, you will need to connect to the two LTE antennas on the back panel. Insert the LTE Hinged External Antenna into the SMA connector labeled as Cell 1 and rotate the threaded connector until it is finger tight. Repeat for the other SMA connector labeled as Cell 2. You will need to adjust the antenna as necessary depending on where you mount the RTK EVK.</p> LTE Cellular Antenna LTE Cellular Antenna Ports Highlighted"},{"location":"single_page/#multi-band-gnss-antenna","title":"Multi-Band GNSS Antenna","text":"<p>Of course, you will need to connect an active multi-band GNSS antenna to the RTK EVK. We recommend using the L1/L2/L5 Surveying Antenna (SPK6618H) that is included with the kit. This covers the L1 and L2 band for the ZED-F9P. This also includes a built-in ground plane to provide the best performance for GNSS. This antenna will also provide broad coverage of the L-Band for the correction signals. Insert the SMA connector from the interface cable to the SMA connector labeled as GNSS. Tighten the hex nut until it is finger tight. Connect the TNC connector side from the interface cable to the to the SPK6618H antenna. Tighten the threaded connector until it is finger tight.</p> GNSS Antenna Port Highlighted Cable Survey Antenna <p>You will need to mount the antenna in an area where it gest the best view of the sky (we recommend the roof). There is mounting hardware where you can permanently mount the antenna to a structure or support. There is also a magnetic mount to attach to a metal structure as well. For the scope of this tutorial, we will not go over the details of installing the antenna.</p> Cable Connected and Survey Antenna Mounted on Magnetic Stand"},{"location":"single_page/#wifibluetooth-antenna","title":"WiFi/Bluetooth Antenna","text":"<p>For WiFi and Bluetooth using the ESP32, you will need to connect the 2.4GHz Duck Antenna to the RPSMA connector labeled as ESP32. Insert the antenna into the RPSMA connector and tighten the threaded connector until it is finger tight.</p> WiFi/Bluetooth Connector Highlighted WiFi/Bluetooth Antenna <p>Note</p> <p>For users that need an extension cable to mount the antenna to a location that is farther away from the RTK EVK, you could use the Interface Cable - RP-SMA Male to RP-SMA Female (10M, RG58).</p>"},{"location":"single_page/#ethernet","title":"Ethernet","text":"<p>For users that are connecting Ethernet or using power from the PoE, you will need to connect the Ethernet cable between the RTK EVK and your PoE network switch. Insert the Ethernet cable to the RJ45 MagJack connector until you hear a click. Then insert the other end into the network switch.</p> Ethernet Port Highlighted Ethernet Cable"},{"location":"single_page/#connecting-to-the-esp32","title":"Connecting to the ESP32","text":"<p>You can connect to the ESP32 by inserting the USB-C connector into the port labeled as CONFIG ESP32 and inserting the other end of the cable to your computer's USB port. This will power the RTK EVK, allow you to upload custom code, manually update the firmware binaries, or connect to a serial terminal.</p> USB CONFIG ESP32 Port Highlighted USB C Cable"},{"location":"single_page/#connecting-to-the-u-blox-modules","title":"Connecting to the u-blox Modules","text":"<p>You can connect to the ZED-F9P, NEO-D9S, or LARA-R6 by inserting the USB-C connector into the port labeled as CONFIG UBLOX and inserting the other end to your computer's USB port.  This will power the RTK EVK and allow you to connect the modules to u-center or m-center (for the LARA-R6).</p> USB CONFIG ESP32 Port Highlighted USB C Cable"},{"location":"single_page/#inserting-a-microsd-card","title":"Inserting a MicroSD Card","text":"<p>To insert a microSD card, slide the microSD card into the microSD socket until it clicks in place. Pushing the microSD card again will eject the memory card.</p> MicroSD Card Port Highlighted MicroSD Card"},{"location":"single_page/#inserting-a-nano-sim-card","title":"Inserting a Nano SIM Card","text":"<p>Note</p> <p>To take advantage of the LARA-R6, insert the nano SIM card into the nano SIM socket until it clicks. In this case, we used a Hologram card. Insert the SIM with the contacts facing down, insert the edge with the chamfered corner first.</p> Nano SIM Card Socket Highlighted Nano SIM Card <p>Note</p> <p>You will need to remove the nano SIM card from the 3-in-1 SIM card holder when you initially receive the Hologram card. Just \"punch\" out the pre-cut nano SIM card size out by pushing it out with your fingers. Make sure to avoid touching the gold contacts with your bare hands.</p>"},{"location":"single_page/#activate-your-hologram-sim","title":"Activate Your Hologram SIM","text":"<p>If you're using a SIM card from Hologram, you'll need to follow a few quick steps to activate your SIM card. <ol> <li>Log in to your Hologram account, or create one.</li> <li>Click the blue + Activate SIM button in the upper-right-corner of your Dashboard.</li> <p> </p> <li>Select your plan \u2013 in most cases \u201cMaker Flexible\u201d is the way to go, but you can upgrade.</li> <li>Enter your SIM card\u2019s CCID. This number can be found printed on both your nano-SIM card and in the larger digits below the bar code. Then select continue.</li> <li>Next you can decide whether to enable auto-refill or not and continue. Finally, you\u2019ll be greeted with a summary page \u2013 hit \u201cActivate\u201d and you\u2019re ready to go!</li> </ol> <p>For more help activating your Hologram SIM card, check out their Connect Your Device documentation.</p></p>"},{"location":"single_page/#inserting-a-wire-into-the-io-screw-terminal","title":"Inserting a Wire into the I/O Screw Terminal","text":"<p>To connect to a pin on the screw terminal block, insert a stripped wire of any length into the I/O screw terminal. Of course, you could use jumper wires with pins as well. Secure the wire by tightening the screw using a precision 2.5mm flathead screw driver. Test the connection by gently pulling the wires to ensure that they are secure.</p> Wire Inserted into I/O and Screw Being Tightened <p>If necessary, users can remove the terminal block off by wiggling the connector or using a spudger. When ready, users can slide the I/O terminal block back into the socket.</p> I/O Screw Terminal Block Removed <p>Tip</p> <p>Don't have spudger? A good substitute includes a flathead screw driver, plastic card, or the PCB ruler. Using a tool will make it easier to remove the I/O terminal block.</p>"},{"location":"single_page/#connecting-a-radio-transceiver","title":"Connecting a Radio Transceiver","text":"<p>Users can connect a radio transceiver to the ZED-F9P UART2 port for correction data. We recommend using a breadboard to JST-GHR-06V cable to connect the SiK Telemetry Radio. Note that the cable is included with the LoRaSerial Kit.</p> <ul> <li> <p> </p> <p> SiK Telemetry Radio V3 - 915MHz, 100mW    WRL-19032 </p> </li> </ul> <ul> <li> <p> </p> <p> SparkFun LoRaSerial Kit - 915MHz (Enclosed)    KIT-20029 </p> </li> </ul> <ul> <li> <p> </p> <p> Breadboard to JST-GHR-06V Cable - 6-Pin x 1.25mm Pitch (For LoRaSerial)    CAB-23353 </p> </li> </ul> <p>For users with the using a telemetry radio, you will need to connect the UART pins and ground to the screw terminal block. Note that this connection is only for the serial UART connection. To power, we recommend using an external 5V voltage source since 5V is not broken out. While there is a 3V3 pin available, the voltage will not be enough to fully power the radio module. One method is connecting a micro-B USB cable and 5V USB wall adapter to the Telemetry Radio.</p> RTK EVKUART Pinout              TelemetryUART Pinout              ZED TX2 RX ZED RX2 TX GND GND <p>For users with the LoRaSerial, you will also be connecting the UART pins and ground to the screw terminal block. To power, we also recommend using an external 5V voltage source for power such as a USB C cable and 5V USB wall adapter.</p> RTK EVKUART Pinout              LoRaSerialUART Pinout              ZED TX2 RXI ZED RX2 TXO GND GND"},{"location":"single_page/#connecting-via-pth","title":"Connecting via PTH","text":"<p>There are various PTHs throughout the PCB. Most are used with the testbeds for quality control but they are available for you to connect! For temporary connections to the PTHs, you could use IC hooks to test out the pins. However, you'll need to solder headers or wires of your choice to the board for a secure connection. You can choose between header pins and jumper wires, or stripping wire and soldering the wire directly to the board.</p> <ul> <li> <p> </p> <p> How to Solder: Through Hole Soldering </p> </li> </ul> <ul> <li> <p> </p> <p> Working with Wire </p> </li> </ul>"},{"location":"single_page/#rtk-everywhere-firmware","title":"RTK Everywhere Firmware","text":"<p>The SparkFun RTK EVK runs on universal firmware created by SparkFun called RTK Everywhere. You can find its source through the RTK Everywhere GitHub repo.</p> Screenshot Firmware through Serial Terminal <p>Make sure to check out the Quick Start Guide for the RTK EVK for a summary of how to get it connected over Bluetooth. You will also find more information about navigating through the configuration menu, updating firmware, and more in the product manual!</p> RTK Everywhere Product Manual: Quickstart Guide"},{"location":"single_page/#arduino-examples","title":"Arduino Examples","text":"<p>Arduino</p> <p>This example assumes you are using the latest version of the Arduino IDE on your desktop. If this is your first time using the Arduino IDE, library, or board add-on, please review the following tutorials.</p> <ul> <li>Installing the Arduino IDE</li> <li>Installing Board Definitions in the Arduino IDE</li> <li>Installing an Arduino Library</li> </ul> <p>Note</p> <p>If you've never connected an CH340 device to your computer before, you may need to install drivers for the USB-to-serial converter. Check out our section on \"How to Install CH340 Drivers\" for help with the installation.</p> <ul> <li>How to Install CH340 Drivers</li> </ul> <p>At the time of writing this tutorial, the RTK Everywhere Firmware currently does not support the u-blox LARA-R6 module. For users that are interested in taking advantage of cellular when Ethernet or WiFi is not available, you can check out the individual Arduino Example Sketches located in the SparkFun RTK EVK Example Sketches folder. Besides the 6x examples for the LARA-R6, you will also notice several other examples such as using the ZED-F9P, NEO-D9S, Qwiic OLED, LEDs, antenna open/short circuit detection, Ethernet, WiFi, and datalogging using the microSD card. Head to the SparkFun RTK EVK GitHub Repo to grab the files or download the .ZIP by clicking the button below.</p> GitHub SparkFun RTK EVK Repo: Arduino Example Sketches <p>For the scope of this tutorial, we will upload one of the examples to get started. After downloading the files, unzip the files and head to the following folder: SparkFun_RTK_EVK-main &gt; Example Sketches. Let's test the connection between the ESP32-WROVER and LARA-R6 by clicking on the 8_1_LARA_UART_Test &gt; 8_1_LARA_UART_Test.ino.</p> <p>Note</p> <p>Some examples may include additional header files. You'll need to click on the example that has the same title as the folder's title. Certain examples may also require an additional Arduino Library. Make sure to check the example to see if there is a <code>#include</code> with the Arduino Library name near the top before compiling.  You may also need to update the examples to provide any secret keys, accounts, or passwords.</p> <p>Then select the associated board definition (in this case the ESP32 Wrover Module) and COM port. With a USB C cable connected to the CONFIG ESP32 port, click on the upload button. Opening the Arduino Serial Terminal at 115200 baud, the output will provide the model and SIM card information.</p> <p>Note</p> <p>At the time of writing, we used the following:  <ul> <li> Arduino IDE v2.3.2</li> <li>esp32 by Espressif v3.0.1</li> <li>u-blox Cellular library by SparkFun v1.0.1</li> </ul></p>"},{"location":"single_page/#troubleshooting","title":"Troubleshooting","text":""},{"location":"single_page/#general-troubleshooting-help","title":"General Troubleshooting Help","text":"<p>Note</p> <p>  Not working as expected and need help?  </p> <p>If you need technical assistance and more information on a product that is not working as you expected, we recommend heading on over to the SparkFun Technical Assistance page for some initial troubleshooting. </p> <p>SparkFun Technical Assistance Page</p> <p>If you don't find what you need there, the SparkFun Forums are a great place to find and ask for help. If this is your first visit, you'll need to create a Forum Account to search product forums and post questions.</p> <p>Create New Forum Account Log Into SparkFun Forums</p>"},{"location":"single_page/#resources","title":"Resources","text":"<p>Now that you've successfully got your SparkFun RTK EVK up and running, it's time to incorporate it into your own project! For more information, check out the resources below:</p> <ul> <li>Schematic (PDF)</li> <li>Eagle Files (ZIP)</li> <li>Board Dimensions (PNG)</li> <li>Case Dimensions (ZIP)</li> <li>RTK Everywhere Product Manual</li> <li>Datasheets<ul> <li>ESP32-WROOM</li> <li>ZED-F9P</li> <li>NEO-D9S</li> <li>LARA-R6</li> </ul> </li> <li>Integration Manuals<ul> <li>ZED-F9P</li> <li>NEO-D9S</li> <li>LARA-R6</li> </ul> </li> <li>LARA-R6 AT Commands Manual</li> <li>LARA-R6 firmware update package links and instructions<ul> <li>Section 8 of the document contains links to m-center, EasyFlash and the USB driver</li> <li>The firmware itself is available in the u-blox documentation &amp; resources. Be sure to select the LARA-R6001D-01B-00.</li> </ul> </li> <li>RTK Everywhere Firmware</li> <li>RTK Everywhere Firmware Binaries</li> <li>Additional ESP32 Code Examples</li> <li>GitHub Hardware Repo</li> <li>SFE Product Showcase</li> </ul> <p>For user that are taking advantage of the Zero-Touch RTK for correction services, make sure to click on the link below! This link will allow you to register, reactivate, or cancel your RTK EVK's correction service.</p> <ul> <li>SparkFun RTK EVK Correction Service Registration &amp; Renewal</li> </ul>"},{"location":"troubleshooting/","title":"Troubleshooting","text":""},{"location":"troubleshooting/#general-troubleshooting-help","title":"General Troubleshooting Help","text":"<p>Note</p> <p>  Not working as expected and need help?  </p> <p>If you need technical assistance and more information on a product that is not working as you expected, we recommend heading on over to the SparkFun Technical Assistance page for some initial troubleshooting. </p> <p>SparkFun Technical Assistance Page</p> <p>If you don't find what you need there, the SparkFun Forums are a great place to find and ask for help. If this is your first visit, you'll need to create a Forum Account to search product forums and post questions.</p> <p>Create New Forum Account Log Into SparkFun Forums</p>"},{"location":"github/contribute/","title":"Contribute: Help Fix our Mistake!","text":"<p>Spot something wrong? Feel free to contribute our open-source design and documentation. </p>"},{"location":"github/contribute/#improve-our-documentation","title":"Improve our Documentation","text":"<p>All of this documentation can be modified by you! Please help us make it better.</p> <ul> <li>These pages are contained in the <code>docs</code> folder of the SparkFun RTK EVK repository.</li> </ul>"},{"location":"github/contribute/#submit-a-correction","title":"Submit a Correction","text":"<ol> <li>Fork this repo</li> <li>Add your corrections or improvements to the markdown file</li> <li>File a pull request with your changes, and enjoy making the words worlds world a better place.<ul> <li>Once received, the documentation specialist will automatically be notified.</li> <li>We will review your suggested improvements to make sure they are correct and fit within our documentation standards.</li> </ul> </li> </ol>"},{"location":"github/contribute/#improve-our-hardware-design","title":"Improve our Hardware Design","text":"<p>All of our designs are open-source! Please help us make it better.</p> <ul> <li>Our board design files are contained in the <code>Hardware</code> folder of the SparkFunRTK EVK Repository.</li> </ul>"},{"location":"github/contribute/#submit-a-design-improvement","title":"Submit a Design Improvement","text":"<ol> <li>Fork this repo</li> <li>Add your design improvements</li> <li>File a pull request with your changes, and enjoy making the words worlds world a better place.<ul> <li>Once received, the engineer in charge of the original design will automatically be notified.</li> <li>We will review your suggested improvements, if they are within our board design standards and meet our product design requirements, we will flag these changes for our next board revision. (Please note, that even if your suggestion is accepted, these changes may not be immediate. We may have to cycle through our current product inventory first.)</li> </ul> </li> </ol>"},{"location":"github/contribute/#contributors","title":"Contributors","text":"<p>Let's provided some recognition to the contributors for this project!</p> <p> </p>"},{"location":"github/file_issue/","title":"Did we make a mistake?","text":"<p>Spot something wrong? Please let us know. </p> <p>Attention</p> <p>This is not where customers should seek assistance on a product. If you require technical assistance or have questions about a product that is not working as expected, please head over to the SparkFun Technical Assistance page for some initial troubleshooting.  SparkFun Technical Assistance Page </p> <p>If you can't find what you need there, you'll need a Forum Account to search product forums and post questions.</p>"},{"location":"github/file_issue/#discrepancies-in-the-documentation","title":"Discrepancies in the Documentation","text":"<p>All of this documentation can be modified by you! Please help us make it better.</p> <ul> <li>The documentation files for these pages are contained in the <code>docs</code> folder of the SparkFun RTK EVK repository.</li> </ul>"},{"location":"github/file_issue/#spot-something-wrong","title":"Spot something wrong?","text":"<p>If a section of the documentation is incorrect, please open an issue and let us know.</p>"},{"location":"github/file_issue/#do-you-have-a-suggested-correction","title":"Do you have a suggested correction?","text":"<ol> <li>With a GitHub account, fork this repo</li> <li>Add your correction(s) or improvement(s) to the markdown file(s)</li> <li>File a pull request with your changes, and enjoy making the words worlds world a better place.<ul> <li>Once received, the documentation specialist will automatically be notified.</li> <li>We will review your suggested improvement(s) to make sure they are correct and fit within our documentation standards.</li> </ul> </li> </ol>"},{"location":"github/file_issue/#problems-in-the-hardware-design","title":"Problems in the Hardware Design","text":"<p>All of our designs are open-source! Please help us make it better.</p> <ul> <li>Our board design files are contained in the <code>Hardware</code> folder of the SparkFun RTK EVK repository.</li> </ul>"},{"location":"github/file_issue/#does-something-not-make-sense","title":"Does something not make sense?","text":"<p>If part of the design is confusing, please open an issue and let us know.</p>"},{"location":"github/file_issue/#did-we-forget-to-include-an-important-function-of-the-board","title":"Did we forget to include an important function of the board?","text":"<ul> <li>Please keep in mind that we may intentionally exclude certain functions of the board to meet our product design requirements. (For example, our Qwiic Micro boards are intended to fit on a small board layout and only use I<sup>2</sup>C communication; therefore, we may not have the SPI and interrupt pins available for users.)</li> <li>If part of the board's functionality is missing, please open an issue and file a feature request.</li> </ul>"},{"location":"github/file_issue/#do-you-wish-to-contribute-directly-to-improving-the-board-design","title":"Do you wish to contribute directly to improving the board design?","text":"<ol> <li>With a GitHub account, Fork this repo</li> <li>Add your design improvement(s)</li> <li>File a pull request with your changes, and enjoy making the words worlds world a better place.<ul> <li>Once received, the engineer in charge of the original design will automatically be notified.</li> <li>We will review your suggested improvement(s), if they are within our board design standards and meet our product design requirements, we will flag these changes for our next board revision. (Please note, that even if your suggestion is accepted, these changes may not be immediate. We may have to cycle through our current product inventory first.)</li> </ul> </li> </ol>"},{"location":"javascript/","title":"javascript directory","text":"<p>This folder should contain the files for the custom javascript that is enabled in the product documentation</p>"}]}